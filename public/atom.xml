<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你若盛开，蝴蝶爱来不来</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://youthliuxi.github.io/"/>
  <updated>2018-07-31T09:00:14.886Z</updated>
  <id>http://youthliuxi.github.io/</id>
  
  <author>
    <name>edward</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>双系统折腾全纪实</title>
    <link href="http://youthliuxi.github.io/2018/07/31/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%8A%98%E8%85%BE%E5%85%A8%E7%BA%AA%E5%AE%9E/"/>
    <id>http://youthliuxi.github.io/2018/07/31/双系统折腾全纪实/</id>
    <published>2018-07-31T08:56:36.000Z</published>
    <updated>2018-07-31T09:00:14.886Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步，硬盘检测"><a href="#第一步，硬盘检测" class="headerlink" title="第一步，硬盘检测"></a>第一步，硬盘检测</h2><p>台电SSD360GB入手检测.md<br><a id="more"></a></p><h2 id="第二步，整理原有系统的软件"><a href="#第二步，整理原有系统的软件" class="headerlink" title="第二步，整理原有系统的软件"></a>第二步，整理原有系统的软件</h2><p>整理原有系统的软件.md</p><h2 id="第三步，制定装机计划与软件安装计划"><a href="#第三步，制定装机计划与软件安装计划" class="headerlink" title="第三步，制定装机计划与软件安装计划"></a>第三步，制定装机计划与软件安装计划</h2><h3 id="装机计划"><a href="#装机计划" class="headerlink" title="装机计划"></a>装机计划</h3><p>360G固态硬盘，到手335G实际内存，计划分区：80G给windows系统盘，155G作为软件安装盘D盘，100G为linux系统盘（不分配盘符）<br>系统安装完成后，激活、安装驱动<br>按类还原：日常使用类、编程类、笔记类、软硬件类、冷门类的顺序还原<br>同时注意以下几点：<br>1、git、机器学习、php服务器、arduino、微信web开发者工具、nodejs（hexo）等，按顺序、按模块还原，保证各编程学习的正常运行。<br>2、各软件安装后及时恢复云端数据</p><h2 id="第四步，分区重装"><a href="#第四步，分区重装" class="headerlink" title="第四步，分区重装"></a>第四步，分区重装</h2><ol><li>重装windows10 1803版，注册机不会使用，淘宝买了注册码，10元，支持三次重装。</li><li>装机后，安装搜狗拼音到c盘，firefox到c盘（为了方便下载小马激活，结果也没用上）</li><li>装驱动，按照日常使用类、编程类、软硬件类、冷门类进行安装（为知笔记最先安装）</li><li>所有软件全部从网上下载，采用最新版本（思考，今后重装系统及软件，是否不需要保留任何形式的安装包，只需要一个安装软件列表即可）</li><li>截止到目前为止，还有hexo博客没有恢复，明天进行，开启linux模式，决定先安装ubuntu16.04与学校服务器一致（2018/7/29更新笔记）</li></ol><h2 id="第五步，Ubuntu装机开始"><a href="#第五步，Ubuntu装机开始" class="headerlink" title="第五步，Ubuntu装机开始"></a>第五步，Ubuntu装机开始</h2><p>自配置深度学习分布式服务器.md</p><h2 id="习惯操作"><a href="#习惯操作" class="headerlink" title="习惯操作"></a>习惯操作</h2><h3 id="修改默认启动项"><a href="#修改默认启动项" class="headerlink" title="修改默认启动项"></a>修改默认启动项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/gurb</span><br><span class="line"><span class="comment">#修改 GRUB_DEFAULT=2，编号从0开始，默认是0</span></span><br><span class="line">sudo update-grub</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一步，硬盘检测&quot;&gt;&lt;a href=&quot;#第一步，硬盘检测&quot; class=&quot;headerlink&quot; title=&quot;第一步，硬盘检测&quot;&gt;&lt;/a&gt;第一步，硬盘检测&lt;/h2&gt;&lt;p&gt;台电SSD360GB入手检测.md&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ubuntu" scheme="http://youthliuxi.github.io/tags/ubuntu/"/>
    
      <category term="windows10" scheme="http://youthliuxi.github.io/tags/windows10/"/>
    
  </entry>
  
  <entry>
    <title>巧用bat，幸福一生</title>
    <link href="http://youthliuxi.github.io/2018/06/03/%E5%B7%A7%E7%94%A8bat%EF%BC%8C%E5%B9%B8%E7%A6%8F%E4%B8%80%E7%94%9F/"/>
    <id>http://youthliuxi.github.io/2018/06/03/巧用bat，幸福一生/</id>
    <published>2018-06-03T15:58:33.000Z</published>
    <updated>2018-07-31T07:35:08.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><p>&emsp;&emsp;windows里每次打开bash都是在C盘user目录下的个人目录，而python的脚本在H盘，于是乎每次都要转盘，再开文件，十分的麻烦，直到使用了bat脚本，类似于linux的sh脚本。<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">H:</span><br><span class="line"><span class="built_in">cd</span> \python\tensorflow\</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;保存成open_tf.bat，这样以后每次只需要在终端运行bat文件就可以了，方便、提升幸福感。<br>&emsp;&emsp;【@echo off】表示关闭所有命令的回显。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; open_tf.bat</span><br></pre></td></tr></table></figure></p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p>&emsp;&emsp;每次更新hexo时都要打一套命令，bat脚本，一次搞定，还可以自定义注释，完美。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p m=</span><br><span class="line">hexo g &amp;&amp; hexo d &amp;&amp; git add * &amp;&amp; git commit -m <span class="string">"%m%"</span> &amp;&amp; git push origin hexo</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;windows里每次打开bash都是在C盘user目录下的个人目录，而python的脚本在H盘，于是乎每次都要转盘，再开文件，十分的麻烦，直到使用了bat脚本，类似于linux的sh脚本。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="bat" scheme="http://youthliuxi.github.io/tags/bat/"/>
    
      <category term="脚本" scheme="http://youthliuxi.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>tensorflow安装</title>
    <link href="http://youthliuxi.github.io/2018/05/21/tensorflow%E5%AE%89%E8%A3%85/"/>
    <id>http://youthliuxi.github.io/2018/05/21/tensorflow安装/</id>
    <published>2018-05-21T14:09:03.000Z</published>
    <updated>2018-07-31T07:35:08.778Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;记在前面，看文档一定要仔细，版本号错了，也有可能安装不上，我一个下午的时间白白消耗，就是因为CUDA使用的是9.2版本，而官网要求的是9.0版本，按理说应该没有太大问题，可就在执行【import tensorflow as tf】时，会报错，显示缺少9.0的文件。<br>&emsp;&emsp;cuDNN其实只是CUDA的辅助文件，所以，在版本的选用上，我选择了最新的7.1.4，目前没发现问题。发现问题也可以再替换回来。<br><a id="more"></a></p><h2 id="你不知道我经历了什么系列"><a href="#你不知道我经历了什么系列" class="headerlink" title="你不知道我经历了什么系列"></a>你不知道我经历了什么系列</h2><p>&emsp;&emsp;一大清早，我兴高采烈的打开电脑，决定正是配置tensorflow的环境，之前用正则抓取笔记成功给了我很强的动力。殊不知，在前方等待我的，是无尽的折磨。<br>&emsp;&emsp;本着“跟着官网有肉吃”的原则，我搭梯子，打开了tensorflow的官网，确定自己要安装GPU版本的tensorflow的时候我还有点小激动，毕竟通常情况下，在GPU上运行要比在CPU上运行的快，关键是，我终于可以接触到与GPU相关的东西了。<br>&emsp;&emsp;按照官网的指示，需要安装CUDA9.0和cuDNNv7.0，然后再使用pip安装tensorflow，我跌跌撞撞的走到了pip那一步，结果【pip3 install –upgrade tensorflow-gpu】结果，居然报错，安装不了。我又同时试了whl文件安装，一样不管用。<br>&emsp;&emsp;没办法，只能使用anaconda安装，本想只配置原生环境，现在是没办法，只得如此了。</p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ol><li>CUDA9.0</li><li>cuDNN7.0</li><li>anaconda</li><li>python3.6（我的是3.6，反正是python3就行）</li><li>和python版本相匹配的tensorflow安装文件（没有也行）</li></ol><h3 id="CUDA9-0"><a href="#CUDA9-0" class="headerlink" title="CUDA9.0"></a>CUDA9.0</h3><p>下载地址：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://developer.nvidia.com/cuda-90-download-archive</span><br></pre></td></tr></table></figure></p><p>最后记得把bin和lib/x64这两个文件夹添加到PATH里</p><h3 id="cuDNN7-1-4"><a href="#cuDNN7-1-4" class="headerlink" title="cuDNN7.1.4"></a>cuDNN7.1.4</h3><p>下载地址：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://developer.nvidia.com/rdp/cudnn-download</span><br></pre></td></tr></table></figure></p><p>最后把三个文件夹下的文件，copy到CUDA对应的文件夹下</p><h3 id="anaconda"><a href="#anaconda" class="headerlink" title="anaconda"></a>anaconda</h3><p>下载地址：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.anaconda.com/download/</span><br></pre></td></tr></table></figure></p><p>一路默认即可，安装路径保证为英文路径。<br>安装完成后，打开【Anaconda prompt】运行以下的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看已安装的常用包</span></span><br><span class="line">conda list</span><br><span class="line"><span class="comment"># 添加清华的软件源</span></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --<span class="built_in">set</span> show_channel_urls yes </span><br><span class="line"><span class="comment"># 创建一个名为tensorflow的python3.6的环境</span></span><br><span class="line">conda create --name tensorflow python=3.6 </span><br><span class="line"><span class="comment"># 启动该环境</span></span><br><span class="line">activate tensorflow</span><br><span class="line"><span class="comment"># 安装tensorflow（选一个即可，我肯定选GPU）</span></span><br><span class="line">python -m pip install --upgrade --ignore-installed tensorflow-gpu</span><br><span class="line">python -m pip install --upgrade --ignore-installed tensorflow</span><br><span class="line"><span class="comment"># 关闭环境</span></span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure></p><p>测试tensorflow的话，只需要在python里看一下【import tensorflow as tf】能否正常即可。<br>linux的江湖规矩，没有反应就是最好的反应。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;记在前面，看文档一定要仔细，版本号错了，也有可能安装不上，我一个下午的时间白白消耗，就是因为CUDA使用的是9.2版本，而官网要求的是9.0版本，按理说应该没有太大问题，可就在执行【import tensorflow as tf】时，会报错，显示缺少9.0的文件。&lt;br&gt;&amp;emsp;&amp;emsp;cuDNN其实只是CUDA的辅助文件，所以，在版本的选用上，我选择了最新的7.1.4，目前没发现问题。发现问题也可以再替换回来。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="tensorflow" scheme="http://youthliuxi.github.io/tags/tensorflow/"/>
    
      <category term="deep-learning" scheme="http://youthliuxi.github.io/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>android上的终端——termux</title>
    <link href="http://youthliuxi.github.io/2018/05/16/android%E4%B8%8A%E7%9A%84%E7%BB%88%E7%AB%AF%E2%80%94%E2%80%94termux/"/>
    <id>http://youthliuxi.github.io/2018/05/16/android上的终端——termux/</id>
    <published>2018-05-15T17:09:03.000Z</published>
    <updated>2018-07-31T07:35:08.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;在安卓也可以体验终端命令的快感，甚至还可以操作安卓基础硬件。<br><a id="more"></a></p><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>&emsp;&emsp;<strong>termux</strong>支持<em>apt</em>软件管理和<em>pkg</em>软件管理，首次安装时，系统会默认给出pkg的安装及更新命令，对此不做过多赘述，用过linux的可以直接上手。</p><h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EDITOR=vim <span class="comment"># 再此之前，应先安装vim，当然，不安装也可以用vi</span></span><br><span class="line">apt edit-sources</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;然后<a href="https://mirrors.tuna.tsinghua.edu.cn/termux" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/termux</a> 代替原文中的 <a href="https://termux.net" target="_blank" rel="noopener">https://termux.net</a>，保存退出，幸福美满。</p><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br></pre></td></tr></table></figure><h2 id="推荐预安装工具"><a href="#推荐预安装工具" class="headerlink" title="推荐预安装工具"></a>推荐预安装工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg update</span><br><span class="line">pkg install vim curl wget git unzip unrar tmux</span><br></pre></td></tr></table></figure><h2 id="管理员权限问题"><a href="#管理员权限问题" class="headerlink" title="管理员权限问题"></a>管理员权限问题</h2><p>&emsp;&emsp;无论是以下哪种管理员都有一个缺点，就是在使用蓝牙键鼠套装时，非管理员界面可以正常识别teb、ctrl、方向键。但管理员权限下，无法自动补全和使用方向键，这就意味着，一个命令输错了，只能删了重来。</p><h3 id="一、虚拟管理员-未root"><a href="#一、虚拟管理员-未root" class="headerlink" title="一、虚拟管理员(未root)"></a>一、虚拟管理员(未root)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot</span><br><span class="line">termux-chroot <span class="comment"># 启动命令</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;模拟root环境的同时，还会模拟linux的文件路径。<br>&emsp;&emsp;普通文件路径是【/data/data/com.termux/file/home】<br>&emsp;&emsp;开启后的文件路径是【/home】</p><h3 id="二、真实管理员-已root"><a href="#二、真实管理员-已root" class="headerlink" title="二、真实管理员(已root)"></a>二、真实管理员(已root)</h3><p>&emsp;&emsp;先通过root向termux授予权限才能执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install tsu</span><br><span class="line">tsu <span class="comment"># 启动命令</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;执行后文件路径不变，因此可以进入手机的任何一个目录</p><h2 id="python部署"><a href="#python部署" class="headerlink" title="python部署"></a>python部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pkg install python2</span><br><span class="line">python2 -m pip install --upgrade pip</span><br><span class="line">pkg install python</span><br><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><h3 id="ipython"><a href="#ipython" class="headerlink" title="ipython"></a>ipython</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install clang</span><br><span class="line">pip install ipython</span><br><span class="line">pip3.6 install ipython</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;如此便可使用【ipython】和【ipython2】进入高效编程的python交互页面。</p><h2 id="nodejs部署"><a href="#nodejs部署" class="headerlink" title="nodejs部署"></a>nodejs部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install nodejs</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="MariaDB-Mysql-部署"><a href="#MariaDB-Mysql-部署" class="headerlink" title="MariaDB(Mysql)部署"></a>MariaDB(Mysql)部署</h2><h3 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install mariadb</span><br></pre></td></tr></table></figure><h3 id="安装基本数据"><a href="#安装基本数据" class="headerlink" title="安装基本数据"></a>安装基本数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_install_db</span><br></pre></td></tr></table></figure><h3 id="启动mariadb服务"><a href="#启动mariadb服务" class="headerlink" title="启动mariadb服务"></a>启动mariadb服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;【友情提示】：启动mysql后，该回话便无法进行任何操作，需要左滑唤醒会话菜单，开启新的回话。而倘若不在一个会话里启动mysqld，而是直接运行mysql，则会爆2002错误。</p><h3 id="修改mysql密码"><a href="#修改mysql密码" class="headerlink" title="修改mysql密码"></a>修改mysql密码</h3><p>&emsp;&emsp;以下操作均在mysqld启动后执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 输入旧密码，空则直接回车</span></span><br><span class="line">Set root password? [Y/n] y</span><br><span class="line">New password:</span><br><span class="line">Re-enter new password:<span class="comment"># 两次输入新密码</span></span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n] Y <span class="comment">#是否移除匿名用户</span></span><br><span class="line">Disallow root login remotely? [Y/n] n <span class="comment">#是否不允许root远程登录</span></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] n <span class="comment">#是否移除test数据库</span></span><br><span class="line">Reload privilege tables now? [Y/n] y <span class="comment">#是否重新加载表的权限</span></span><br></pre></td></tr></table></figure></p><h3 id="登录mysql"><a href="#登录mysql" class="headerlink" title="登录mysql"></a>登录mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p******</span><br></pre></td></tr></table></figure><h2 id="php部署"><a href="#php部署" class="headerlink" title="php部署"></a>php部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install php <span class="comment"># 可采用phpinfo进行测试</span></span><br><span class="line">php -S 127.0.0.1:8080 -t www/</span><br></pre></td></tr></table></figure><h2 id="nginx部署"><a href="#nginx部署" class="headerlink" title="nginx部署"></a>nginx部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx</span><br><span class="line">nginx <span class="comment"># 默认端口是8080</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;nginx的启动要在【termux-chroot】命令作用后再运行，否则会报错。</p><h3 id="nginx操作"><a href="#nginx操作" class="headerlink" title="nginx操作"></a>nginx操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fuser -k 8080/tcp <span class="comment"># 停止nginx服务</span></span><br><span class="line">nginx -s reload <span class="comment"># 重启nginx服务</span></span><br></pre></td></tr></table></figure><h3 id="nginx解析php"><a href="#nginx解析php" class="headerlink" title="nginx解析php"></a>nginx解析php</h3><h4 id="安装php-fpm"><a href="#安装php-fpm" class="headerlink" title="安装php-fpm"></a>安装php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install php-fpm</span><br></pre></td></tr></table></figure><h4 id="配置php-fpm"><a href="#配置php-fpm" class="headerlink" title="配置php-fpm"></a>配置php-fpm</h4><p>&emsp;&emsp;在【proot】环境下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">termux-chroot</span><br><span class="line">vim /etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;将【listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock】改为【listen = 127.0.0.1:9000】</p><h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">termux-chroot</span><br><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;配置文件如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">worker_processes 1;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    sendfile on;</span><br><span class="line">    keepalive_timeout 65;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        root /data/data/com.termux/files/home/www;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root /data/data/com.termux/files/home/www;</span><br><span class="line">        &#125; <span class="comment"># location的右括号</span></span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">            root html;</span><br><span class="line">            fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            fastcgi_param SCRIPT_FILENAwentME /data/data/com.termux/files/home/www<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            include fastcgi_params;</span><br><span class="line">        &#125; <span class="comment"># localhost的右括号</span></span><br><span class="line">    &#125; <span class="comment"># server的右括号</span></span><br><span class="line">&#125; <span class="comment"># http的右括号</span></span><br></pre></td></tr></table></figure></p><h2 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p*** -e<span class="string">"create database wordpress;show databases;"</span></span><br><span class="line"><span class="comment"># 以下在www文件夹下操作</span></span><br><span class="line">wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip</span><br><span class="line">unzip wordpress-4.9.4-zh_CN.zip</span><br><span class="line"><span class="built_in">cd</span> wordpress</span><br><span class="line">php -S 127.0.0.1:8080</span><br><span class="line"><span class="comment"># 或者采用</span></span><br><span class="line">termux-chroot <span class="comment"># nginx必须在proot环境下运行</span></span><br><span class="line">php-fpm</span><br><span class="line">nginx <span class="comment"># 在127.0.0.1:8080下直接访问</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;目前存在疑问，wordpress放在二级文件夹会出现404，不知是不是使用【php -S】直接安装的问题</p><h2 id="Termux-api"><a href="#Termux-api" class="headerlink" title="Termux-api"></a>Termux-api</h2><p>&emsp;&emsp;这是一个神奇的东西，有了API你就可以接管手机的部分功能，调取某些参数，终端启动电话和短信也是可以的。</p><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>&emsp;&emsp;首先安装【termux:api】，但是，目前这个app只在google play中能够下载，所以就要引入另一个app【apkpure】用来下载【termux:api】<br>&emsp;&emsp;安装完成后，还要在终端中安装才能正常调用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">pkg install termux-api</span><br><span class="line">termux-battery-status <span class="comment"># 获取电池信息</span></span><br><span class="line">termux-camera-info <span class="comment"># 获取相机信息</span></span><br><span class="line">termux-clipboard-get <span class="comment"># 获取剪切板数据</span></span><br><span class="line">termux-clipboard-set PHP是最好的语言 <span class="comment"># 设置新的剪切板数据</span></span><br><span class="line">termux-contact-list <span class="comment"># 获取通讯录列表</span></span><br><span class="line">termux-sms-inbox <span class="comment"># 获取短信内容列表</span></span><br><span class="line">termux-sms-send <span class="comment"># 发送短信</span></span><br><span class="line"><span class="comment"># 多号码群发</span></span><br><span class="line">termux-sms-send -n number(s) recipient number(s) - separate multiple numbers by commas </span><br><span class="line"><span class="comment"># 举例</span></span><br><span class="line">termux-sms-send -n 10086 ceshi</span><br><span class="line">termux-telephony-call <span class="comment"># 拨打电话</span></span><br><span class="line"><span class="comment"># 举例</span></span><br><span class="line">termux-telephony-call 10086</span><br><span class="line">termux-wifi-connectioninfo <span class="comment"># 获取当前wifi链接信息</span></span><br><span class="line">termux-wifi-scaninfo <span class="comment"># 获取最近一次wifi扫描信息</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;编程定时发送短信了解一下，还有更多功能等待开发呦~</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;在安卓也可以体验终端命令的快感，甚至还可以操作安卓基础硬件。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="android" scheme="http://youthliuxi.github.io/tags/android/"/>
    
      <category term="termux" scheme="http://youthliuxi.github.io/tags/termux/"/>
    
  </entry>
  
  <entry>
    <title>《复仇者联盟3：无限战争》</title>
    <link href="http://youthliuxi.github.io/2018/05/12/%E3%80%8A%E5%A4%8D%E4%BB%87%E8%80%85%E8%81%94%E7%9B%9F3%EF%BC%9A%E6%97%A0%E9%99%90%E6%88%98%E4%BA%89%E3%80%8B/"/>
    <id>http://youthliuxi.github.io/2018/05/12/《复仇者联盟3：无限战争》/</id>
    <published>2018-05-11T17:33:59.000Z</published>
    <updated>2018-07-31T07:35:08.782Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;漫威电影，我是从钢铁侠2开始看，随后又补了钢铁侠1、无敌浩克，接着就是顺着雷神、美队、复仇者联盟一路走下来，一点一点的看着漫威影业把电影宇宙构建完善，一点一点把支离破碎的故事通过一条主线穿起来，每一个主角都有他自己的故事，他们总会在合适的时间、合适的地点，亮出一块宇宙原石，而这宇宙原石，正是整个故事的线索，把这些线索串起来的人，正是萨诺斯。<br><a id="more"></a><br>&emsp;&emsp;萨诺斯，又名灭霸，自从复仇者联盟1的片尾彩蛋出现他的身影，我就一直在等他到来，我也不知道为什么要用等，自从第一颗宇宙原石——宇宙魔方出现的时候，我们就知道，萨诺斯早晚有一天会来到地球，收集起遗落在各地的宇宙原石，并最终消灭半个宇宙的生命（漫画宇宙就是这么讲的）。而这一天，就这么来了。</p><p>&emsp;&emsp;我相信，很多看过复联三的人，会恨他，恨他为什么一定要不择手段的集齐六颗宇宙原石，恨他为什么一定要不择手段的灭掉整个宇宙的半数生命，就是因为他，我们的复仇者联盟、我们的银河护卫队、我们的超级英雄以及他们曾经发誓要保卫的星球，消失了一半的生命。但是我不恨他，相反，我恨同情他。</p><p>&emsp;&emsp;萨诺斯的母星是泰坦星，是土星的第六颗卫星，整个太阳系只有四颗演示星球拥有大气层：地球、金星、火星、泰坦星。也就是说，泰坦星是唯一一颗拥有大气层的卫星。这个星球曾经是那么的和平，美丽，幸福，直到一个人的诞生——萨诺斯，他刚出生的时候奇丑无比，他的母亲在看过他之后，拿起了手术刀企图杀死他，但是被医生制止了，人们都以为他的母亲是因为一时接受不了孩子的丑陋才做出如此失心疯的行为，而他的母亲却说道，在他眼里，看到了灾难。</p><p>&emsp;&emsp;他的青春期是幸福的，虽然长相丑陋，却并没有遭到校园暴力（这一点，请人类向他的族人好好学习）。正是在这段时间，他见到了他的真爱，一个绿眼睛的同龄女孩。这一切的幸福，一直延续到后来发生的一场灾难，变种蜥蜴啃食了他的几个同学，而他，在绿眼女孩的怂恿下，只身前往了变种蜥蜴的洞穴，把所有的变种蜥蜴都屠杀了个干净。随后，萨诺斯的成绩突飞猛进，很快就学习了星球上的所有知识，并将其融会贯通，他也探索了星球的每一寸土地。甚至，还造访了其他的星球、星系，绘制了星图。这位天才、学霸，却依然在为一件事而困扰，为什么他和他的族人不一样。为此，他解刨了无数外星生物的尸体却一无所获，直到绿眼女孩的提醒：“有时候，问题的答案不在外部，而在内部”，于是，他开始解刨他的族人，一个、两个、三个、…、十六个、十七个，他一直没有找到答案，而此时，他把目光，放在了他的母亲身上。在他母亲也死在他的手术刀下的那天，他离开了泰坦星，开始了宇宙间的流浪。</p><p>&emsp;&emsp;他到过无数的地方，见过无数的女人，但是，无论他和谁在一起，做了什么，心里都还是忘不掉那个女人，那个他最初结识的绿眼女孩。于是他又回到了母星，见到了他梦想中的那个女人，他企图拥有她，向她示爱，许诺可以为了她放弃一切，而女人却告诉他，她不希望这个世界上有他和别的女人留下的子嗣，于是，萨诺斯开始回到每个他造访过的星球，见每一个他见过的女人，那些女人，大多都安静的抱着孩子，期盼着丈夫的归来，可是，萨诺斯带来的，确是一场杀戮。可这一切，都没能让他心爱的那个女人满足，直到最后，他就要毁灭他的母星的时候，他才发现，这个让他一生钟爱的女子，他从始至终，都不知道她的名字，不知道她从哪里来。直到她在他面前，揭下自己的伪装，展露出自己的真面目——死亡。</p><p>&emsp;&emsp;为了换回死亡的芳心，他开始了无尽的屠杀，以生命的终结作为向死亡的献礼，而宇宙的半数生命，就是他最大的献礼。为此，他一直征战，闯荡着每一个拥有无限宝石的地方。这也就是，无限战争的由来。</p><p>&emsp;&emsp;漫威电影之所以好看，不仅仅是因为他在用美剧的思路拍电影，花十年时间一点一点构建了一个完整的世界观，更是在于这里面的每一个人，无论是正派还是反派，都有他做事的动机，都有他的原则，从地球、山达尔星、阿斯加德、虚无之地而言，灭霸是个毁天灭地的反派，是一个人人都想诛杀他的大反派。</p><p>&emsp;&emsp;但是，对他自己而言，他的一生是那么的无助，爱而不得，像是一个单纯的傻瓜，为了死亡，他放弃了一切，献祭了一切，到头来，即便是他拥有了掌控宇宙的力量，即便是他替代了永恒的位置，即便是他最后和死亡平起平坐，他依然没有得到死亡的青睐（此处手动艾特贱贱，一个比灭霸更接近死亡的男人）。</p><p>&emsp;&emsp;当然，以上的故事都是源自于漫画宇宙，但是电影宇宙对他为什么要集齐宇宙原石做过多的交代，而他在毁灭了半个宇宙的生命之后，也只是静静地坐在山上，安静的欣赏着这个世界的日出日落，一生的奋斗目标达成的那一刻，战斗对于他已经没有了任何意义，而他，也终于可以安安静静的坐在那儿，静静地品味着属于他的，片刻的美好。</p><p>&emsp;&emsp;其实，写到这儿，我是越来越觉得，灭霸有一种，可恨之人必有可怜之处的感觉，也让我想起了曾经看到过得一句话：“世人常说商纣王昏庸无道，视生命如草芥，但，你可以问一问苏妲己，谁是这世上最好的男人。”</p><p>&emsp;&emsp;所以，对世界而言，他是灭霸，是一个一心想要毁掉宇宙半数生命的人，而，对于他自己，他一直都是萨诺斯，一个为了获得心爱之人片刻垂帘的小小泰坦星人。</p><hr><p>（华丽丽的分割线）<br>&emsp;&emsp;让我们来聊点电影有趣的事情吧</p><p>&emsp;&emsp;洛基，一直都是一个纨绔子弟的形象，曾经受灭霸怂恿，引敌人攻打纽约，造成了复仇者的第一次集结，但是，他有着自己的坚守，他在用他的方式，守护着他认为重要的人，他的哥哥，雷神索尔。玩世不恭的外表之下，有着他精心掩藏的东西。即便是如他一般淡漠人间生死的神，也有他想要守护的东西。</p><p>&emsp;&emsp;奇异博士，说实话吧，博士，在你看到的一千四百万零六百零五种可能中，是不是复仇者赢的可能是零，你所说的1，也不过是给了大家一个渺小的安慰是么？</p><p>&emsp;&emsp;浩克，浩克是个无敌的存在，漫画里的他，被光照会发配宇宙，也没有退缩，变成绿殇回来地球复仇，但是，这一次，他害怕了，在力量宝石面前，在这个宇宙终极bug的面前，他退缩了，他再也不是那个一往无前的傻子，反而蜷缩在博士体内，不敢面对现实。</p><p>&emsp;&emsp;妮妮，从复联一开始就总想着拯救这个世界，是他只身扛着核弹冲向了外星空间，是他想要创造一个AI来保护人类，即便是得知灭霸的到来，他也无所畏惧，想要只身犯险。他是个勇者，他是复仇者的重要成员，正如他当年对洛基说过的话一样，即便是你毁灭了地球，复仇者联盟中，只要有一个人能够逃出生天，我们也会回来复仇。破而后立，才是复仇者真正的灵魂。他和洛基其实有着很多的相似之处，世人只知他是一个玩世不恭的花花公子，世界第二富有的人，而对他而言，为了他想要守护的人，他可以牺牲一切，包括他自己。</p><p>&emsp;&emsp;星爵，从小就被勇度绑架，帮勇度偷东西，从始至终，都没有人教过他应该有大局意识，他的种种表现，都彰显着他小孩子的一面，他永远都没有长大过，他一直都是那个在地球带着的小小少年，曾经听说父亲亲手把脑瘤放在了母亲体内，愤怒的他立马就掏出枪多打了父亲几下，是的，他在发泄，他使用的一直都是小孩子的发泄手段，幼稚的，单纯的，只不过，这一次，他挑错了时候，听闻女朋友的死讯，他也毫不克制的发泄着自己的愤怒，在他的脑海里，一直，都没有全局的计划。从始至终，都是想一步，走一步。</p><p>&emsp;&emsp;猩红女巫，弟弟拔下了鹰眼的flag，死在了复联2，男朋友又因为拥有心灵原石，别灭霸复活后又掐死，这是一种怎样的无奈，即便是亲手了结了男友，也没办法阻止灭霸，如此的牺牲会给女巫的心里带来多大的伤痛，不敢想象。</p><p>&emsp;&emsp;红骷髅，就知道，我就知道，你只是被传送走了，并不是死了，只是没想到，你成了灵魂宝石的引路人。空间宝石对你的放逐，就是替灵魂宝石在寻找一个合适的引路人。这里我不是特别理解，为什么会选择红骷髅作为引路人。也许，就是为了填个坑吧。</p><p>&emsp;&emsp;美队，史蒂夫拥有着一个bug一般的人设，那就是——可以和任何敌人，五五开。美队VS雷神，美队VS钢铁侠，美队VS暗夜比邻星，美队VS灭霸，统统可以力量僵持，用振金盾牌抗下雷神之锤的一击到还可以理解，硬抗拥有无限手套的灭霸压下来的一只手是几个意思？</p><p>&emsp;&emsp;复仇者联盟还没有全灭，他们会复仇的，因为这是他们存在的意义。而且，有时间原石这种超级bug级别的存在，只要抢到，分分钟复原到打响指之前的时间点。一个连其他原石都能有复原的原石，还有什么是他做不到的？（我开始还以为，心灵原石因其本身能量的特殊性，所以应该不受其他原石控制，但是，事实上是，原石可以影响一切，包括其他原石以及他们自己，有这种设定在，还怕个球啊，只要有一个人能够拿到时间宝石，一切都不是事儿）</p><p>&emsp;&emsp;stan lee，老爷子又出来搞事情，之前观察者找你给他们讲故事，现在故事也讲完了，没事儿干了，跑过来当校车司机了，哎~真是少了谁都不能少了你老人家啊~</p><p>&emsp;&emsp;彩蛋最后，神盾局前局长在消失之前联系的是惊奇队长，看来，漫威故事线要发展新人物了。</p><p>&emsp;&emsp;唯一让我遗憾的是亚当没有出来，曾经在雷神2和银护2里面给过两个镜头的茧，直到半数宇宙生命被毁灭，都没有孕育出魔士亚当么？还是说，他会在后续的故事中出现？</p><p>&emsp;&emsp;最后，不得不吐槽一下，矮人王的熔炉，一个巨大的星球，就是这个巨大的，能够锻造雷霆战斧的巨大熔炉，居然和拖拉机是一种启动方式，简直是看到的我不要太出戏呦~</p><p>&emsp;&emsp;我相信复仇者们会再回来，故事还要继续，有希望，世界就不会真的堕入深渊~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;漫威电影，我是从钢铁侠2开始看，随后又补了钢铁侠1、无敌浩克，接着就是顺着雷神、美队、复仇者联盟一路走下来，一点一点的看着漫威影业把电影宇宙构建完善，一点一点把支离破碎的故事通过一条主线穿起来，每一个主角都有他自己的故事，他们总会在合适的时间、合适的地点，亮出一块宇宙原石，而这宇宙原石，正是整个故事的线索，把这些线索串起来的人，正是萨诺斯。&lt;br&gt;
    
    </summary>
    
      <category term="电影部落" scheme="http://youthliuxi.github.io/categories/%E7%94%B5%E5%BD%B1%E9%83%A8%E8%90%BD/"/>
    
    
      <category term="漫威" scheme="http://youthliuxi.github.io/tags/%E6%BC%AB%E5%A8%81/"/>
    
  </entry>
  
  <entry>
    <title>acme.sh配置ssl证书</title>
    <link href="http://youthliuxi.github.io/2018/05/10/acme-sh%E9%85%8D%E7%BD%AEssl%E8%AF%81%E4%B9%A6/"/>
    <id>http://youthliuxi.github.io/2018/05/10/acme-sh配置ssl证书/</id>
    <published>2018-05-10T03:10:42.000Z</published>
    <updated>2018-07-31T07:35:08.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你不知道我经历了什么系列"><a href="#你不知道我经历了什么系列" class="headerlink" title="你不知道我经历了什么系列"></a>你不知道我经历了什么系列</h2><p>&emsp;&emsp;去年5月，不知道我是出于什么样的思考，在阿里云申请了一年期的免费ssl证书，结果，直到证书过期，我都用https做一点有用的东西，还让博客顶了一年的不安全https，实在是惭愧。<br>&emsp;&emsp;就在我马上要堕落到使用宝塔面板的实名认证来申请一年期免费证书的时候，acme.sh悄然走进我的世界。<br><a id="more"></a></p><h2 id="天堂之门，开启"><a href="#天堂之门，开启" class="headerlink" title="天堂之门，开启"></a>天堂之门，开启</h2><p>&emsp;&emsp;以下为简述环节，想要了解更多详情，请关注官方<a href="https://github.com/Neilpang/acme.sh/wiki/说明" target="_blank" rel="noopener">wiki</a></p><h3 id="主要操作步骤"><a href="#主要操作步骤" class="headerlink" title="主要操作步骤"></a>主要操作步骤</h3><ol><li>安装acme.sh</li><li>生成证书</li><li>copy证书到apache服务</li><li>更新证书</li><li>更新acme.sh</li><li>特殊情况备注</li></ol><h3 id="1-安装acme-sh"><a href="#1-安装acme-sh" class="headerlink" title="1. 安装acme.sh"></a>1. 安装acme.sh</h3><p>可以使用以下三种安装方式的任意一种：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">curl https://get.acme.sh | sh</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">wget -O - https://get.acme.sh | sh</span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Neilpang/acme.sh.git</span><br><span class="line"><span class="built_in">cd</span> ./acme.sh</span><br><span class="line">./acme.sh --install</span><br></pre></td></tr></table></figure></p><h3 id="2-生成证书"><a href="#2-生成证书" class="headerlink" title="2. 生成证书"></a>2. 生成证书</h3><p>&emsp;&emsp;生成证书大概分为两种，HTTP方式和DNS方式。<br>&emsp;&emsp;1. HTTP方式的操作是在网站根目录下放置一个文件来验证域名所有权，完成验证，生成证书，操作仅在服务器端进行，无须其他复杂操作。<br>&emsp;&emsp;2. DNS方式的好处是，不需要你有任何的服务器也不需要任何公网ip，只要dns解析正确就可以完成验证。换句话说，你只花十几块钱买了个域名，也一样可以拥有“小绿锁”。但是没有服务器的依托就不能自动更新证书，每次证书过期的时候，只能采取手动方式更新txt解析记录。<br>&emsp;&emsp;鉴于笔者域名+服务器配套设施完善，所以采用了方案一，方案二打算应用到github+hexo的博客上，具体操作步骤有待今后的探索。</p><h4 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 预先说明一点，以下所有acme.sh脚本的操作均是在~/.acme.sh文件夹中进行的</span></span><br><span class="line">acme.sh  --issue  -d 域名  --webroot  /网站根目录绝对地址</span><br><span class="line"><span class="comment"># 官方说明中还有一种姿势是可以自动适配到apache或nginx的配置文件并自行完成验证，但是可能是姿势不对，此操作在本人服务器中无效，此处稍作提示</span></span><br></pre></td></tr></table></figure><h4 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h4><p>&emsp;&emsp;小白鼠暂未上线，敬请期待。。。</p><h3 id="copy证书到apache服务"><a href="#copy证书到apache服务" class="headerlink" title="copy证书到apache服务"></a>copy证书到apache服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --installcert -d 域名 \</span><br><span class="line">        --key-file /保存路径/与域名同名.key \</span><br><span class="line">        --fullchain-file /保存路径/fullchain.cer \</span><br><span class="line">        --reloadcmd <span class="string">"service httpd force-reload"</span></span><br><span class="line"><span class="comment"># PS:</span></span><br><span class="line"><span class="comment"># 1.保存路径是随便定义的，但，如果你曾经配置过ssl证书，那么直接把证书解析到曾经那个文件夹下即可，方便查找。</span></span><br><span class="line"><span class="comment"># 2.名字也可以随便修改，但倘若你并没有这方面的习惯，建议采用以上命名方式，方便，好习惯早养成嘛~</span></span><br><span class="line"><span class="comment"># 3. httpd的位置填写你的web服务器软件，nginx、apache或者httpd，平时你重启服务时使用啥，这里就用啥，你懂得~</span></span><br></pre></td></tr></table></figure><h4 id="关于ssl证书的配置问题"><a href="#关于ssl证书的配置问题" class="headerlink" title="关于ssl证书的配置问题"></a>关于ssl证书的配置问题</h4><p>&emsp;&emsp;鉴于本人采用的是宝塔面板配置的ssl，但是有些文件配置还是应该记住，所以，就在下面保存一下相关的配置信息吧。<br>&emsp;&emsp;conf配置中的443端口只比80端口多出了以下的部分，其他都一样。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SSL</span></span><br><span class="line">SSLEngine On</span><br><span class="line">SSLCertificateFile /etc/letsencrypt/live/youthliuxi.cn/fullchain.cer</span><br><span class="line">SSLCertificateKeyFile /etc/letsencrypt/live/youthliuxi.cn/youthliuxi.key</span><br><span class="line">SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH</span><br><span class="line">SSLProtocol All -SSLv2 -SSLv3</span><br><span class="line">SSLHonorCipherOrder On</span><br></pre></td></tr></table></figure></p><h3 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h3><p>&emsp;&emsp;目前证书会在60天之后自动更新，不用担心</p><h3 id="更新acme-sh"><a href="#更新acme-sh" class="headerlink" title="更新acme.sh"></a>更新acme.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动更新</span></span><br><span class="line">./acme.sh --upgrade</span><br><span class="line"><span class="comment"># 自动更新</span></span><br><span class="line">./acme.sh --upgrade --auto-upgrade</span><br><span class="line"><span class="comment"># 关闭自动更新</span></span><br><span class="line">./acme.sh --upgrade --auto-upgrade 0</span><br></pre></td></tr></table></figure><h3 id="特殊情况备注"><a href="#特殊情况备注" class="headerlink" title="特殊情况备注"></a>特殊情况备注</h3><p>&emsp;&emsp;由于基础环境的不同会出现这样那样的特殊情况，本人以笔记和博客为依托，记录各种自己遇到过的特殊情况，只为倘若你遇到类似情况，能节约一点时间。</p><h4 id="1-acme-sh查看报错"><a href="#1-acme-sh查看报错" class="headerlink" title="1. acme.sh查看报错"></a>1. acme.sh查看报错</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./acme.sh  --issue  .....  --debug</span><br></pre></td></tr></table></figure><h4 id="2-页面未出现绿锁，同时提示有不安全信息"><a href="#2-页面未出现绿锁，同时提示有不安全信息" class="headerlink" title="2. 页面未出现绿锁，同时提示有不安全信息"></a>2. 页面未出现绿锁，同时提示有不安全信息</h4><p>&emsp;&emsp;我出现这种情况是因为页面上某些关键连接保持了http协议，所以存在了http与https混合的现象，这个时候，就需要通过F12启动控制台，控制台会提示存在某些混排问题，把其中的http协议均替换为https协议即可。<br>&emsp;&emsp;wordpress的话，还需要在设置中将站点地址都改为https协议<br>&emsp;&emsp;我遇到的最神奇的情况是因为wordpress的头像，在之前的设置中保存的依然是http的连接，需要在编辑个人信息中，重新更新一下头像文件，再保存，就好了。</p><h3 id="让我们一起迎接绿锁时代的到来吧。"><a href="#让我们一起迎接绿锁时代的到来吧。" class="headerlink" title="让我们一起迎接绿锁时代的到来吧。"></a>让我们一起迎接绿锁时代的到来吧。</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;你不知道我经历了什么系列&quot;&gt;&lt;a href=&quot;#你不知道我经历了什么系列&quot; class=&quot;headerlink&quot; title=&quot;你不知道我经历了什么系列&quot;&gt;&lt;/a&gt;你不知道我经历了什么系列&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;去年5月，不知道我是出于什么样的思考，在阿里云申请了一年期的免费ssl证书，结果，直到证书过期，我都用https做一点有用的东西，还让博客顶了一年的不安全https，实在是惭愧。&lt;br&gt;&amp;emsp;&amp;emsp;就在我马上要堕落到使用宝塔面板的实名认证来申请一年期免费证书的时候，acme.sh悄然走进我的世界。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《后来的我们》——强行尬感情牌</title>
    <link href="http://youthliuxi.github.io/2018/05/02/%E3%80%8A%E5%90%8E%E6%9D%A5%E7%9A%84%E6%88%91%E4%BB%AC%E3%80%8B%E2%80%94%E2%80%94%E5%BC%BA%E8%A1%8C%E5%B0%AC%E6%84%9F%E6%83%85%E7%89%8C/"/>
    <id>http://youthliuxi.github.io/2018/05/02/《后来的我们》——强行尬感情牌/</id>
    <published>2018-05-02T15:49:19.000Z</published>
    <updated>2018-07-31T07:35:08.781Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;先说一下个人感受，感觉整体剧情略显平庸，几处淡淡的交叉剪辑，并没有那种两个故事线的感觉，过去和未来两条线，更像是一主一辅，未来线只是为了把过去线引出来，但是，这其中，引的元素显得有些刻意，仿佛是为了讲故事而讲故事，并没有那么的吸引人。<br><a id="more"></a><br>&emsp;&emsp;全剧穿插着各种08~12年的经典老梗：“I miss you, but I miss you”，“后来的我们拥有了所有，可再也没有了我们”，“北京，我们很快就要发达了”</p><p>&emsp;&emsp;几处伏笔埋的也比较浅：“伊恩的世界再也没有了色彩”、“父亲的白内障”、“从追求房子到买到房子”、“女主谈了一个有家室的男人”。好多好多类似的安排都显得是那么的刻意，刻意去营造一些悲情，刻意去营造一种爱而不得的悲伤。</p><p>&emsp;&emsp;剧中其实更心疼的是男主的老婆，居然被刻意营造出一种柴米油盐酱醋茶的家庭主妇，剧中仅有的声音就停留在“我告诉你，孩子入学的事儿你一定要放在心上”，用这种事儿来反衬女主不入凡尘的女主，殊不知，假如女主和男主走到了一起，她也会变成围绕柴米油盐的女子。此处是目前为止我觉得最刻意的地方。虚假的伪装，刻意的营造一种男主最后的选择是一个错误，是一个向生活妥协的错误，由此可以看出，女主才是更适合男主的，男主选择最后的妻子是不得已而为之。</p><p>&emsp;&emsp;我们每一个人都会在一段恋爱关系中学到些什么，或者说会在告别一段关系中学到些什么，倘若男主最后随意选择了一个人凑合着过日子，那么就证明，男主根本就没有从女主的离开中学到任何东西，他到最后也不知道自己真正想要的是什么。</p><p>&emsp;&emsp;男主妻子这个角色根本没有显示其存在的意义，对男女主的感情线没有任何的助力，相反，结婚生子之后，还在心心念着女主，则反衬出一丝渣男体质，充分体现了女主选错了人。</p><p>&emsp;&emsp;再说回男主，电影的前半段，男主只是在打游戏，丝毫没有做游戏的感觉，电影中后段才开始设计游戏，原本游戏可以作为故事主线的一部分，能够和男女主结合的更加密切一些，结果只成了最后一点的衬托，强行煽情。还有中间蹦跶出来的那个做房地产的女网友，既没有在最后现身成为故事线的一部分，又没有引发男女主过多的情绪波动，从而引发男女主的争执以及分手。</p><p>&emsp;&emsp;男主的治安拘留仿佛只是为了衬托女主为男主着想的心，既没有交代前情，又没有交代后续，突兀的仿佛这个桥段的出现只是为了把男主扣留在北京，从而强行并入主线剧情，这段情节的设计也许可以更好一些。</p><p>&emsp;&emsp;我想，可能导演想要的就是这种感觉：“我活成了你想要的样子，却把你丢了的感觉”。可以，这很符合女生心目中男生该有的样子，但其实最终电影呈现出来的效果却是：“我活成了我以为的你想要的样子，可是，到最后我也不知道你要的到底是什么”。但是你以为的真的是你以为的么？</p><p>&emsp;&emsp;剧中的女生，从不知道自己要的是什么，到知道自己要的是什么；而男生，则从知道自己要的是什么，到不知道自己要的是什么。大家都是成长，只不过，女生的成长是价值观趋于正常的成长，而男生渐渐的扭曲了自己的价值观。</p><p>&emsp;&emsp;我就不想说整部电影流露出来的机场成功学的气息和脱离现实的味道。满分10分，最多给6分。要不是因为这是奶茶的作品，要不是因为周冬雨和井柏然演技在线，剧中路人甲乙丙丁的演技也没有那么尬，及格分都够呛保得住。</p><p>&emsp;&emsp;尬完了，睡觉。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;先说一下个人感受，感觉整体剧情略显平庸，几处淡淡的交叉剪辑，并没有那种两个故事线的感觉，过去和未来两条线，更像是一主一辅，未来线只是为了把过去线引出来，但是，这其中，引的元素显得有些刻意，仿佛是为了讲故事而讲故事，并没有那么的吸引人。&lt;br&gt;
    
    </summary>
    
      <category term="电影部落" scheme="http://youthliuxi.github.io/categories/%E7%94%B5%E5%BD%B1%E9%83%A8%E8%90%BD/"/>
    
    
      <category term="后来的我们" scheme="http://youthliuxi.github.io/tags/%E5%90%8E%E6%9D%A5%E7%9A%84%E6%88%91%E4%BB%AC/"/>
    
      <category term="影评" scheme="http://youthliuxi.github.io/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>linux权限相关</title>
    <link href="http://youthliuxi.github.io/2018/05/02/linux%E6%9D%83%E9%99%90%E7%9B%B8%E5%85%B3/"/>
    <id>http://youthliuxi.github.io/2018/05/02/linux权限相关/</id>
    <published>2018-05-02T08:03:25.000Z</published>
    <updated>2018-07-31T07:35:08.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这一期，让我们愉快地讨论一下linux权限的问题"><a href="#这一期，让我们愉快地讨论一下linux权限的问题" class="headerlink" title="这一期，让我们愉快地讨论一下linux权限的问题"></a>这一期，让我们愉快地讨论一下linux权限的问题</h2><h3 id="你不知道我经历了什么系列（前言）"><a href="#你不知道我经历了什么系列（前言）" class="headerlink" title="你不知道我经历了什么系列（前言）"></a>你不知道我经历了什么系列（前言）</h3><p>&emsp;&emsp;前两天发现了一个非常有趣的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 000 /</span><br></pre></td></tr></table></figure><a id="more"></a><p>&emsp;&emsp;这条命令简直就是比【sudo rm -rf /】更狠，其实这里面的关键在于，chmod命令把自己的权限将为0了，所以，他也没有任何权限可以对其他文件进行任何操作<br>&emsp;&emsp;此命令执行成功后，整个linux系统内，除了cd命令以外，全线瘫痪，ls无权使用。恢复的方法也很简单，将硬盘接入另一个linux系统中，对其进行重新的赋予权限，然后把重要运行文件拷贝出来，重装系统，重新搭建运行环境，并重新上线项目。这是我所能想到的方法，之所以需要重装系统，是因为不可能给每个系统文件单独设计权限，也无法确定每个文件的权限，而倘若给所有文件777的权限，系统一样会瘫痪，服务一样会瘫痪，linux系统不允许所有程序都拥有root权限</p><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>&emsp;&emsp;这件事让我对linux的权限设置有了兴趣，梳理一下</p><table><thead><tr><th>代号</th><th>作用</th><th>权限值</th></tr></thead><tbody><tr><td>r</td><td>读</td><td>4</td></tr><tr><td>w</td><td>写</td><td>2</td></tr><tr><td>x</td><td>运行</td><td>1</td></tr></tbody></table><p>&emsp;&emsp;由此可以组合出八种权限赋予方式，分别是</p><table><thead><tr><th>模式</th><th>数字</th></tr></thead><tbody><tr><td>rwx</td><td>7</td></tr><tr><td>rw-</td><td>6</td></tr><tr><td>r-x</td><td>5</td></tr><tr><td>r--</td><td>4</td></tr><tr><td>-wx</td><td>3</td></tr><tr><td>-w-</td><td>2</td></tr><tr><td>--x</td><td>1</td></tr><tr><td>---</td><td>0</td></tr></tbody></table><p>&emsp;&emsp;而放置权限的三位分别是文件属主拥有的权限、同组用户拥有的权限、其他用户拥有的权限</p><h3 id="chmod操作方式"><a href="#chmod操作方式" class="headerlink" title="chmod操作方式"></a>chmod操作方式</h3><p>&emsp;&emsp;chmod操作方式分为两种</p><h4 id="直接赋值型"><a href="#直接赋值型" class="headerlink" title="直接赋值型"></a>直接赋值型</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 / <span class="comment"># 给根目录下所有文件赋予最高权限值</span></span><br></pre></td></tr></table></figure><p>##权限添加型<br>&emsp;&emsp;适用于给个别用户或用户组添加或删除权限</p><table><thead><tr><th>用户</th><th>意义</th></tr></thead><tbody><tr><td>u</td><td>所属人(user)</td></tr><tr><td>g</td><td>所属群组(group)</td></tr><tr><td>o</td><td>其他人(other)</td></tr><tr><td>a</td><td>全部的人(all)</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o+r test.txt <span class="comment"># 允许其他用户读取test.txt</span></span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>&emsp;&emsp;其实应该是四位，在这三位之前还有个文件类型标志位，他只有四种状态，只有字母表示方式，没有数字表示方式</p><table><thead><tr><th>字母</th><th>类型</th></tr></thead><tbody><tr><td>d</td><td>文件夹</td></tr><tr><td>-</td><td>普通文件</td></tr><tr><td>l</td><td>链接文件（类似windows快捷方式）</td></tr><tr><td>b</td><td>块设备文件（硬盘光驱类）</td></tr><tr><td>p</td><td>管道文件</td></tr><tr><td>c</td><td>字符设备文件（猫等串口设备）</td></tr><tr><td>s</td><td>套接口文件/数据接口文件</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这一期，让我们愉快地讨论一下linux权限的问题&quot;&gt;&lt;a href=&quot;#这一期，让我们愉快地讨论一下linux权限的问题&quot; class=&quot;headerlink&quot; title=&quot;这一期，让我们愉快地讨论一下linux权限的问题&quot;&gt;&lt;/a&gt;这一期，让我们愉快地讨论一下linux权限的问题&lt;/h2&gt;&lt;h3 id=&quot;你不知道我经历了什么系列（前言）&quot;&gt;&lt;a href=&quot;#你不知道我经历了什么系列（前言）&quot; class=&quot;headerlink&quot; title=&quot;你不知道我经历了什么系列（前言）&quot;&gt;&lt;/a&gt;你不知道我经历了什么系列（前言）&lt;/h3&gt;&lt;p&gt;&amp;emsp;&amp;emsp;前两天发现了一个非常有趣的命令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo chmod -R 000 /&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器不得不说的二三事儿" scheme="http://youthliuxi.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AF%B4%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B%E5%84%BF/"/>
    
    
      <category term="linux" scheme="http://youthliuxi.github.io/tags/linux/"/>
    
      <category term="chmod" scheme="http://youthliuxi.github.io/tags/chmod/"/>
    
  </entry>
  
  <entry>
    <title>Markdown添加Latex数学公式</title>
    <link href="http://youthliuxi.github.io/2018/04/28/Markdown%E6%B7%BB%E5%8A%A0Latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    <id>http://youthliuxi.github.io/2018/04/28/Markdown添加Latex数学公式/</id>
    <published>2018-04-28T10:53:59.000Z</published>
    <updated>2018-07-31T07:35:08.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h2><p>&emsp;&emsp;最近爱上了用markdown记笔记，无论是为知笔记还是hexo，简直是不要太方便，然而，前两天，我遇到了瓶颈。<br>&emsp;&emsp;在使用markdown记深度学习笔记的时候，突然需要输入一些数学公式，犹记得markdown是兼容数学公式的，于是搜索了一下，现在稍微整理如下，本文就作为一个markdown的latex数学符号速查表吧。<br><a id="more"></a></p><h3 id="给hexo添加LaTeX"><a href="#给hexo添加LaTeX" class="headerlink" title="给hexo添加LaTeX"></a>给hexo添加LaTeX</h3><p>&emsp;&emsp;hexo添加latex功能大约有三步</p><ol><li><p>安装hexo-math</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-math --save</span><br><span class="line">hexo math install</span><br></pre></td></tr></table></figure></li><li><p>配置主题的_config.yml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mathjax: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>在文章的信息栏添加参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mathjax: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="添加方法"><a href="#添加方法" class="headerlink" title="添加方法"></a>添加方法</h3><ol><li><p>行内公式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$行内公式$</span><br></pre></td></tr></table></figure></li><li><p>行间公式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$行间公式$$</span><br></pre></td></tr></table></figure></li></ol><h3 id="角标与开方"><a href="#角标与开方" class="headerlink" title="角标与开方"></a>角标与开方</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$c=\sqrt&#123;a^&#123;2&#125;+b_&#123;xy&#125;^&#123;2&#125;+e^&#123;x&#125;&#125;$$</span><br></pre></td></tr></table></figure><p>$$c=\sqrt{a^{2}+b_{xy}^{2}+e^{x}}$$</p><h3 id="分数表达"><a href="#分数表达" class="headerlink" title="分数表达"></a>分数表达</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\frac&#123;x^&#123;2&#125;y^&#123;2&#125;&#125;&#123;x+y&#125;$$</span><br></pre></td></tr></table></figure><p>$$\frac{x^{2}y^{2}}{x+y}$$</p><h3 id="求和与连乘"><a href="#求和与连乘" class="headerlink" title="求和与连乘"></a>求和与连乘</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\sum<span class="emphasis">_&#123;i=0&#125;^&#123;n&#125;$$ $$\prod_</span>\epsilon$$</span><br></pre></td></tr></table></figure><p>$$\sum_{i=0}^{n}$$ $$\prod_\epsilon$$</p><h3 id="微分与积分"><a href="#微分与积分" class="headerlink" title="微分与积分"></a>微分与积分</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$\int_&#123;a&#125;^&#123;\pi&#125; f(x) \,dx$$</span><br></pre></td></tr></table></figure><p>$$\int_{a}^{\pi} f(x) \,dx$$</p><h3 id="极限与偏导数"><a href="#极限与偏导数" class="headerlink" title="极限与偏导数"></a>极限与偏导数</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$\lim_&#123;x \to +\infty&#125;\frac&#123;1&#125;&#123;x&#125;$$</span><br><span class="line">$$\frac&#123;\partial^2 u&#125;&#123;\partial z^2&#125;$$</span><br></pre></td></tr></table></figure><p>$$\lim_{x \to +\infty}\frac{1}{x}$$<br>$$\frac{\partial^2 u}{\partial z^2}$$</p><h3 id="三角函数和矩阵"><a href="#三角函数和矩阵" class="headerlink" title="三角函数和矩阵"></a>三角函数和矩阵</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$$\cos2\theta = cos^2\theta -sin^2\theta \\ = 2\cos^2\theta -1$$</span><br><span class="line"></span><br><span class="line">$$\begin&#123;equation&#125;</span><br><span class="line">A=\left[</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line">1&amp;2&amp;3 \\ </span><br><span class="line">2&amp;3&amp;4 \\ </span><br><span class="line">3&amp;4&amp;5  </span><br><span class="line">\end&#123;matrix&#125;</span><br><span class="line">\right]</span><br><span class="line">\end&#123;equation&#125;$$</span><br></pre></td></tr></table></figure><p>$$\cos2\theta = cos^2\theta -sin^2\theta \ = 2\cos^2\theta -1$$</p><p>$$\begin{equation}<br>A=\left[<br>\begin{matrix}<br>1&amp;2&amp;3 \<br>2&amp;3&amp;4 \<br>3&amp;4&amp;5<br>\end{matrix}<br>\right]<br>\end{equation}$$</p><h3 id="数据集符号"><a href="#数据集符号" class="headerlink" title="数据集符号"></a>数据集符号</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">集合的大括号： \&#123; ... &#125;\</span><br><span class="line">集合中的“|”： \mid</span><br><span class="line">属于： \in</span><br><span class="line">不属于： \not\in</span><br><span class="line">A包含于B： A\subset B</span><br><span class="line">A真包含于B： A\subsetneqq B</span><br><span class="line">A包含B： A\supset B</span><br><span class="line">A真包含B： A\supsetneqq B</span><br><span class="line">A不包含于B： A\not\subset B</span><br><span class="line">A交B： A\cap B</span><br><span class="line">A并B： A\cup B</span><br><span class="line">A的闭包： \overline&#123;A&#125;</span><br><span class="line">A减去B: A\setminus B</span><br><span class="line">实数集合： \mathbb&#123;R&#125;</span><br><span class="line">空集： \emptyset</span><br></pre></td></tr></table></figure><h3 id="希腊字母表"><a href="#希腊字母表" class="headerlink" title="希腊字母表"></a>希腊字母表</h3><table><thead><tr><th style="text-align:center">希腊字母大小写</th><th style="text-align:center">Latex形式</th><th></th><th style="text-align:center">希腊字母大小写</th><th style="text-align:center">Latex形式</th></tr></thead><tbody><tr><td style="text-align:center">$A$ $\alpha$</td><td style="text-align:center">A \alpha</td><td></td><td style="text-align:center">$N$ $\mu$</td><td style="text-align:center">N \mu</td></tr><tr><td style="text-align:center">$B$ $\beta$</td><td style="text-align:center">B \beta</td><td></td><td style="text-align:center">$\Xi$ $\xi$</td><td style="text-align:center">\Xi \xi</td></tr><tr><td style="text-align:center">$\Gamma$ $\gamma$</td><td style="text-align:center">\Gamma \gamma</td><td></td><td style="text-align:center">$O$ $o$</td><td style="text-align:center">O o</td></tr><tr><td style="text-align:center">$\Delta$ $\delta$</td><td style="text-align:center">\Delta \delta</td><td></td><td style="text-align:center">$\Pi$ $\pi$</td><td style="text-align:center">\Pi \pi</td></tr><tr><td style="text-align:center">$E$ $\varepsilon$ $\epsilon$</td><td style="text-align:center">E \varepsilon \epsilon</td><td></td><td style="text-align:center">$P$ $\varrho$ $\rho$</td><td style="text-align:center">P \varrho \rho</td></tr><tr><td style="text-align:center">$Z$ $\zeta$</td><td style="text-align:center">Z \zeta</td><td></td><td style="text-align:center">$\Sigma$ $\sigma$</td><td style="text-align:center">\Sigma \sigma</td></tr><tr><td style="text-align:center">$H$ $\eta$</td><td style="text-align:center">H \eta</td><td></td><td style="text-align:center">$T$ $\tau$</td><td style="text-align:center">T \tau</td></tr><tr><td style="text-align:center">$\Theta$ $\vartheta$ $\theta$</td><td style="text-align:center">\Theta \vartheta \theta</td><td></td><td style="text-align:center">$\Upsilon$ $\upsilon$</td><td style="text-align:center">\Upsilon \upsilon</td></tr><tr><td style="text-align:center">$I$ $\iota$</td><td style="text-align:center">I \iota</td><td></td><td style="text-align:center">$\Phi$ $\varphi$ $\phi$</td><td style="text-align:center">\Phi \varphi \phi</td></tr><tr><td style="text-align:center">$K$ $\kappa$</td><td style="text-align:center">K \kappa</td><td></td><td style="text-align:center">$X$ $\chi$</td><td style="text-align:center">X \chi</td></tr><tr><td style="text-align:center">$\Lambda$ $\lambda$</td><td style="text-align:center">\Lambda \lambda</td><td></td><td style="text-align:center">$\Psi$ $\psi$</td><td style="text-align:center">\Psi \psi</td></tr><tr><td style="text-align:center">$M$ $\mu$</td><td style="text-align:center">M \mu</td><td></td><td style="text-align:center">$\Omega$ $\omega$</td><td style="text-align:center">\Omega \omega</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;markdown&quot;&gt;&lt;a href=&quot;#markdown&quot; class=&quot;headerlink&quot; title=&quot;markdown&quot;&gt;&lt;/a&gt;markdown&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;最近爱上了用markdown记笔记，无论是为知笔记还是hexo，简直是不要太方便，然而，前两天，我遇到了瓶颈。&lt;br&gt;&amp;emsp;&amp;emsp;在使用markdown记深度学习笔记的时候，突然需要输入一些数学公式，犹记得markdown是兼容数学公式的，于是搜索了一下，现在稍微整理如下，本文就作为一个markdown的latex数学符号速查表吧。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="markdown" scheme="http://youthliuxi.github.io/tags/markdown/"/>
    
      <category term="latex" scheme="http://youthliuxi.github.io/tags/latex/"/>
    
      <category term="hexo" scheme="http://youthliuxi.github.io/tags/hexo/"/>
    
      <category term="数学公式" scheme="http://youthliuxi.github.io/tags/%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>树莓派上的lamp</title>
    <link href="http://youthliuxi.github.io/2018/04/17/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E7%9A%84lamp/"/>
    <id>http://youthliuxi.github.io/2018/04/17/树莓派上的lamp/</id>
    <published>2018-04-17T09:03:21.000Z</published>
    <updated>2018-07-31T07:35:08.788Z</updated>
    
    <content type="html"><![CDATA[<h2 id="你不知道我经历了什么系列"><a href="#你不知道我经历了什么系列" class="headerlink" title="你不知道我经历了什么系列"></a>你不知道我经历了什么系列</h2><p>&emsp;&emsp;年轻就是要作死，正所谓不疯魔，不成佛，但是，我这一作，给自己凭白增加了一天的工作量，以下经验写在前面：</p><blockquote><p>在陌生的linux系统中，慎重使用lnmp一键安装包</p></blockquote><a id="more"></a><p>&emsp;&emsp;情况简介，最初，我给树莓派的系统安装了vim、tmux、python、nodejs，在上面调试了一个wechat_jump_game没有成功之后，我就放弃了对他的操作。就在昨天，突发奇想之下，我打算给树莓派安装一个lamp或者lnmp环境，毕竟python和nodejs都有了，怎么能少了当初引我入门的php呢！说干就干。<br>&emsp;&emsp;于是我找到了lnmp的一键安装包<a href="https://lnmp.org" target="_blank" rel="noopener">https://lnmp.org</a>，执行了如下的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install screen //系统没有screen，于是先安装screen在进行</span><br><span class="line">screen -S lnmp</span><br><span class="line">wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;&amp; tar zxf lnmp1.4.tar.gz &amp;&amp; <span class="built_in">cd</span> lnmp1.4 &amp;&amp; ./install.sh lnmp</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;系统这个脚本，神奇的运行了超过6个小时，我安装了两次，一次是跨夜的操作，一次是从上午起床后开始操作，两次的反馈都告诉了我同一个结果：php安装失败。<br>&emsp;&emsp;Are you kidding me？安装了6个多小时，你告诉我安装失败？<br>&emsp;&emsp;于是，在现有基础上，我又开始进行lnmp的分步骤安装，比如：先安装nginx，在安装mysql、php、php-mysql、phpmyadmin。甚至在此之前有个教程告诉我，可以直接使用apt install phpmyadmin，它会把其他的选项都安装好，而我无一例外的都失败了，到头来几乎都只能确定nginx安装好了。<br>&emsp;&emsp;换个思路，我开始安装lamp,不长脑子的我同样选择了<a href="https://lamp.sh" target="_blank" rel="noopener">https://lamp.sh</a>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/teddysun/lamp.git</span><br><span class="line"><span class="built_in">cd</span> lamp</span><br><span class="line">chmod +x *.sh</span><br><span class="line">screen -S lamp</span><br><span class="line">./lamp.sh</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;结果，这货居然直接不识别树莓派的系统，说请换用centos、debain或ubuntu系统，得了，又歇菜了<br>&emsp;&emsp;终于，学聪明的我决心正是开始尝试使用分部安装的方式，检索了系统的卸载方式使用，再此先汇总一下树莓派系统的软件卸载方式，其实应该也是ubuntu系统软件的卸载方式</p><h3 id="常用apt命令列表"><a href="#常用apt命令列表" class="headerlink" title="常用apt命令列表"></a>常用apt命令列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search <span class="comment"># ------(package 搜索包)</span></span><br><span class="line">apt-cache show <span class="comment">#------(package 获取包的相关信息，如说明、大小、版本等)</span></span><br><span class="line">sudo apt-get install <span class="comment"># ------(package 安装包)</span></span><br><span class="line">sudo apt-get install <span class="comment"># -----(package - - reinstall 重新安装包)</span></span><br><span class="line">sudo apt-get -f install <span class="comment"># -----(强制安装?#"-f = --fix-missing"当是修复安装吧...)</span></span><br><span class="line">sudo apt-get remove <span class="comment">#-----(package 删除包)</span></span><br><span class="line">sudo apt-get remove - - purge <span class="comment"># ------(package 删除包，包括删除配置文件等)</span></span><br><span class="line">sudo apt-get autoremove --purge <span class="comment"># ----(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）)</span></span><br><span class="line">sudo apt-get update <span class="comment">#------更新源</span></span><br><span class="line">sudo apt-get upgrade <span class="comment">#------更新已安装的包</span></span><br><span class="line">sudo apt-get dist-upgrade <span class="comment"># ---------升级系统</span></span><br><span class="line">sudo apt-get dselect-upgrade <span class="comment">#------使用 dselect 升级</span></span><br><span class="line">apt-cache depends <span class="comment">#-------(package 了解使用依赖)</span></span><br><span class="line">apt-cache rdepends <span class="comment"># ------(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧...)</span></span><br><span class="line">sudo apt-get build-dep <span class="comment"># ------(package 安装相关的编译环境)</span></span><br><span class="line">apt-get <span class="built_in">source</span> <span class="comment">#------(package 下载该包的源代码)</span></span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean <span class="comment"># --------清理下载文件的存档 &amp;&amp; 只清理过时的包</span></span><br><span class="line">sudo apt-get check <span class="comment">#-------检查是否有损坏的依赖</span></span><br></pre></td></tr></table></figure><h3 id="常用dpkg命令列表"><a href="#常用dpkg命令列表" class="headerlink" title="常用dpkg命令列表"></a>常用dpkg命令列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i xxx.deb // 安装deb软件包</span><br><span class="line">dpkg -r xxx.deb // 删除软件包</span><br><span class="line">dpkg -r –purge xxx.deb // 连同配置文件一起删除</span><br><span class="line">dpkg -info xxx.deb // 查看软件包信息</span><br><span class="line">dpkg -L xxx.deb // 查看文件拷贝详情</span><br><span class="line">dpkg -l // 查看系统中已安装软件包信息</span><br><span class="line">dpkg-reconfigure xxx // 重新配置软件包</span><br><span class="line">dpkg -l |grep ^rc|awk <span class="string">'&#123;print $2&#125;'</span> |sudo xargs dpkg -P // 清除所有已删除包的残馀配置文件</span><br><span class="line">// 如果报如下错误，证明你的系统中没有残留配置文件了，无须担心。</span><br><span class="line">// dpkg: –purge needs at least one package name argument</span><br></pre></td></tr></table></figure><h3 id="dpkg安装的可以用apt卸载，反之亦可"><a href="#dpkg安装的可以用apt卸载，反之亦可" class="headerlink" title="dpkg安装的可以用apt卸载，反之亦可"></a>dpkg安装的可以用apt卸载，反之亦可</h3><h2 id="最终，带有一些强迫情节的我，终于——重装了系统"><a href="#最终，带有一些强迫情节的我，终于——重装了系统" class="headerlink" title="最终，带有一些强迫情节的我，终于——重装了系统"></a>最终，带有一些强迫情节的我，终于——重装了系统</h2><p>&emsp;&emsp;插一个小情节，我在重装系统之前，对原系统做了一个处理，在根目录下运行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 -R *</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;结果，phpmyadmin直接报错：系统权限分配错误，有些文件不应该给予如此高的权限。</p><p>&emsp;&emsp;配置”wpa_supplicant.conf”和”ssh”，安装vim和tmux，修改/etc/apt/sources.list和/etc/apt/sources.list.d/raspi.list的软件源，这些已经无需多言了<br>&emsp;&emsp;接下来就是lamp的搭建，闲话不多说，直接上代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apache2 mysql-server mysql-client php php-gd php-mysql</span><br><span class="line">sudo chmod 777 /var/www/</span><br><span class="line">sudo apt-get install phpmyadmin</span><br><span class="line">sudo a2enmod rewrite</span><br><span class="line">sudo ln -s /usr/share/phpmyadmin /var/www</span><br><span class="line">sudo ln -s /var/www  ~/</span><br><span class="line"><span class="comment"># apache2原配置中，将www/html作为主文件夹，需要进sites-available，将里面的两个conf文件中主文件夹路径修改为www</span></span><br><span class="line"><span class="comment"># 期间还可以写个phpinfo.php文件测试一下php是否可用</span></span><br><span class="line">sudo /etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure><h2 id="安装期间遇到的问题"><a href="#安装期间遇到的问题" class="headerlink" title="安装期间遇到的问题"></a>安装期间遇到的问题</h2><h3 id="mysql的root初始密码未知"><a href="#mysql的root初始密码未知" class="headerlink" title="mysql的root初始密码未知"></a>mysql的root初始密码未知</h3><ul><li>mysql安装过程中未提示输入初始密码，所以，需要进行修改，然而，网上众多方法中大多数都是需要知道旧密码，或直接修改、或登录到控制台操作，唯一的不需要进入控制台的【mysqld –skip-grant-tables】，跳过mysql服务的权限表认证操作，我还是无效的（也可能我的操作方法有问题）</li><li>直到我使用了网上所谓军哥的一键修改lnmp环境下mysql数据库密码脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft.vpser.net/lnmp/ext/reset_mysql_root_password.sh</span><br><span class="line">sh reset_mysql_root_password.sh</span><br><span class="line">// 脚本已留存，值得研究</span><br></pre></td></tr></table></figure><h3 id="phpmyadmin报错"><a href="#phpmyadmin报错" class="headerlink" title="phpmyadmin报错"></a>phpmyadmin报错</h3><h4 id="mysqli-real-connect-HY000-2002-No-such-file-or-directory"><a href="#mysqli-real-connect-HY000-2002-No-such-file-or-directory" class="headerlink" title="mysqli_real_connect(): (HY000/2002): No such file or directory"></a>mysqli_real_connect(): (HY000/2002): No such file or directory</h4><ul><li>用【find -name】命令找到一个名为config.inc.php的文件，在phpmyadmin文件夹下，将文件中的”localhost”修改为”127.0.0.1”</li></ul><h4 id="ERROR-1698-28000-Access-denied-for-user-‘root‘-’localhost’"><a href="#ERROR-1698-28000-Access-denied-for-user-‘root‘-’localhost’" class="headerlink" title="ERROR 1698 (28000): Access denied for user ‘root‘@’localhost’"></a>ERROR 1698 (28000): Access denied for user ‘root‘@’localhost’</h4><ul><li>这个错误同样发生在phpmyadmin登录页面，但是，当使用【mysql -uroot -p】的时候，也同样出现，而使用【sudo mysql -uroot -p】则并未出现，因此怀疑是phpmyadmin的某个设置对权限的限制导致的，遂沿着这个方向检索，未果</li><li>期间试图将/etc/mysql的权限改为777，后因权限过高，出现了一个新的报错，于是又改为644，报错依旧<blockquote><p>mysql: [Warning] World-writable config file ‘/etc/mysql/my.cnf’ is ignored.</p></blockquote></li><li>一个偶然找到了操作方法（进入mysql操作台，思路是对mysql相关数据库的数据属性进行修改）:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -uroot -p</span><br><span class="line">&gt; show databases;</span><br><span class="line">&gt; use mysql;</span><br><span class="line">&gt; select user, plugin from mysql.user;</span><br><span class="line"><span class="comment"># 显示的root的plugin是"unix_socket"</span></span><br><span class="line"><span class="comment"># 将其修改为"mysql_native_password"</span></span><br><span class="line">&gt; update mysql.user <span class="built_in">set</span> authentication_string=PASSWORD(<span class="string">'newpassword'</span>), plugin=<span class="string">'mysql_native_password'</span> <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">&gt; flush pricileges;</span><br></pre></td></tr></table></figure><ul><li>【service mysql restart】或者【sudo shutdown -r now】，重启mysql服务或者，重启系统</li></ul><h4 id="至此，所有问题均已被解开，lamp运转正常，已安装wordpress，继续进行下一步测试以及项目demo搭建问题"><a href="#至此，所有问题均已被解开，lamp运转正常，已安装wordpress，继续进行下一步测试以及项目demo搭建问题" class="headerlink" title="至此，所有问题均已被解开，lamp运转正常，已安装wordpress，继续进行下一步测试以及项目demo搭建问题"></a>至此，所有问题均已被解开，lamp运转正常，已安装wordpress，继续进行下一步测试以及项目demo搭建问题</h4><hr><h4 id="2018年5月8日更新"><a href="#2018年5月8日更新" class="headerlink" title="2018年5月8日更新"></a>2018年5月8日更新</h4><h5 id="pi-dashboard"><a href="#pi-dashboard" class="headerlink" title="pi-dashboard"></a>pi-dashboard</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/spoonysonny/pi-dashboard.git</span><br></pre></td></tr></table></figure><h4 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;你不知道我经历了什么系列&quot;&gt;&lt;a href=&quot;#你不知道我经历了什么系列&quot; class=&quot;headerlink&quot; title=&quot;你不知道我经历了什么系列&quot;&gt;&lt;/a&gt;你不知道我经历了什么系列&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;年轻就是要作死，正所谓不疯魔，不成佛，但是，我这一作，给自己凭白增加了一天的工作量，以下经验写在前面：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在陌生的linux系统中，慎重使用lnmp一键安装包&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="服务器不得不说的二三事儿" scheme="http://youthliuxi.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AF%B4%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B%E5%84%BF/"/>
    
    
      <category term="lamp" scheme="http://youthliuxi.github.io/tags/lamp/"/>
    
      <category term="raspberrypi" scheme="http://youthliuxi.github.io/tags/raspberrypi/"/>
    
      <category term="树莓派" scheme="http://youthliuxi.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>tmux使用小记</title>
    <link href="http://youthliuxi.github.io/2018/04/10/tmux%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/"/>
    <id>http://youthliuxi.github.io/2018/04/10/tmux使用小记/</id>
    <published>2018-04-10T15:56:24.000Z</published>
    <updated>2018-07-31T07:35:08.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install tmux</span><br></pre></td></tr></table></figure><a id="more"></a><p>注：ctrl+b是唤醒控制操作响应，和vim里的esc推出编辑是一个感觉</p><h2 id="常用部分"><a href="#常用部分" class="headerlink" title="常用部分"></a>常用部分</h2><blockquote><p>ctrl+b ? 显示快捷键帮助<br>ctrl+b “ 横向分割屏幕<br>ctrl+b % 纵向分割屏幕<br>ctrl+b 方向键 切换屏幕<br>ctrl+b ctrl+方向键 调整分割窗口大小<br>ctrl+b o 跳到下一个分个窗口<br>ctrl+b w 以菜单方式显示及选择窗口<br>ctrl+b 0~9 选择几号窗口<br>ctrl+b q 显示分割窗口编号<br>ctrl+b c 新建窗口<br>ctrl+b p 选择前一个窗口<br>ctrl+b n 选择下一个窗口<br>ctrl+b x 关闭面板<br>ctrl+b &amp; 关闭窗口</p></blockquote><h2 id="不常用部分"><a href="#不常用部分" class="headerlink" title="不常用部分"></a>不常用部分</h2><blockquote><p>ctrl+b ctrl+o 调换窗口位置，类似vim中的ctrl+w<br>ctrl+b 空格键 采用下一个内置布局<br>ctrl+b ! 把当前窗口变为新窗口<br>ctrl+b l 切换到最后使用的窗口<br>ctrl+b t 显示时钟<br>ctrl+b ; 切换到最后使用的面板<br>ctrl+b s 以菜单方式显示和选择会话<br>ctrl+b d 退出tmux，并保持当前会话，tmux仍在运行，此时可以通过tmux attach进入到指定会话</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install tmux&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="服务器不得不说的二三事儿" scheme="http://youthliuxi.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%AF%B4%E7%9A%84%E4%BA%8C%E4%B8%89%E4%BA%8B%E5%84%BF/"/>
    
    
      <category term="ubuntu" scheme="http://youthliuxi.github.io/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://youthliuxi.github.io/tags/linux/"/>
    
      <category term="tmux" scheme="http://youthliuxi.github.io/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>hexo备份相关</title>
    <link href="http://youthliuxi.github.io/2018/04/09/hexo%E5%A4%87%E4%BB%BD%E7%9B%B8%E5%85%B3/"/>
    <id>http://youthliuxi.github.io/2018/04/09/hexo备份相关/</id>
    <published>2018-04-08T16:04:51.000Z</published>
    <updated>2018-07-31T07:35:08.774Z</updated>
    
    <content type="html"><![CDATA[<p>自从上次使用重装系统又重新配置hexo之后，就一直对hexo备份的问题念念不忘，曾经查到相关信息，可以从hexo托管的那个项目里新建一个分支，将markdown源码和themes主题文件放到这个分支里，就可以实现源码备份了。<br><a id="more"></a></p><h2 id="你不知道我经历了什么"><a href="#你不知道我经历了什么" class="headerlink" title="你不知道我经历了什么"></a>你不知道我经历了什么</h2><ul><li>起初，我只记得是要建立一个分支，于是，就直接在github官网上建立了一个分支</li><li>结果没想到，分支内容完全复刻主分支内容，导致我直接没办法push上去</li><li>一怒之下，删掉github上这个项目，重新建立</li><li>然后，我就GG了，hexo d根本没办法把更新提交到github上，于是乎，我的博客境外部分，心脏停止了跳动</li><li>没关系啦，大不了推到了重新来过</li><li>新建文件夹“youthliuxi.github.io”，按照操作步骤一步一步思考，重新配置，终于，博客活了过来</li><li>以下简述操作步骤</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>新建github项目“youthliuxi.github.io”，选择不生成readme</li><li>新建文件夹“youthliuxi.github.io”，取一样的名字纯粹是为了好看</li><li><p>在文件夹中运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">// 没有的话，就先运行npm install -g hexo</span><br><span class="line">git init</span><br><span class="line">git checkout hexo</span><br><span class="line">// 创建hexo分支，名字都行，好记就行</span><br><span class="line">git add * </span><br><span class="line">// 很有可能会提示如果你想添加所有项目，请使用【-f】参数，不管应该没事儿</span><br><span class="line">git commit -m “备注”</span><br><span class="line">git remote add origin git@github.com:youthliuxi/youthliuxi.github.io.git</span><br><span class="line">git push origin hexo</span><br><span class="line">// 这样就成功的把源码上传到hexo分支上了</span><br></pre></td></tr></table></figure><blockquote><p>创建分支命令 git branch (branchname) 列出分支 git branch<br>切换分支命令 git checkout (branchname)<br>合并分支 git merge (branchname)<br>创建新分支并立即切换到该分支下 git checkout -b (branchname)<br>删除分支命令 git branch -d (branchname)<br>只需要用前两个命令，再创建一个master分支，即可</p></blockquote></li><li><p>配置hexo的_config.yml文件，以及写md格式的博客文章</p><ul><li>注意：deploy配置中，注明master分支</li></ul></li><li>hexo g &amp;&amp; hexo d，运行，前者生成html文件，后者负责把静态页推送到github或者coding上</li><li>如果hexo d显示找不到git的话，先安装【npm install -g hexo-deployer-git】</li><li>ok，try again，it work</li></ol><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果你把</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:youthliuxi/youthliuxi.github.io</span><br></pre></td></tr></table></figure><p>错误的输入成了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin https://github.com/youthliuxi/youthliuxi.github.io</span><br></pre></td></tr></table></figure><p>不要悲伤，不要心急，以下办法可以帮到你</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br><span class="line">$ git remote add origin git@github.com:youthliuxi/youthliuxi.github.io</span><br></pre></td></tr></table></figure><p>不要问我为啥知道这个，还不是因为脑子有问题，选了个https连接方式</p><h2 id="从ubuntu恢复备份内容"><a href="#从ubuntu恢复备份内容" class="headerlink" title="从ubuntu恢复备份内容"></a>从ubuntu恢复备份内容</h2><p>接下来才是本次实验的重头戏，昨天没做完，今天继续，搞定了，接着写总结<br>切换到ubuntu系统，由于我的ubuntu从来没有配置过git，所以我应该先从配置git做起，废话不多说，直接上代码</p><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.email <span class="string">"lx_einstein@sina.com"</span></span><br><span class="line">$ git config --global user.name <span class="string">"youthliuxi"</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"lx_einstein@sina.com"</span></span><br><span class="line">//这期间会让你输入保存公钥的地址（直接回车就会保存在下面那个默认地址里）、github登录密码、再次输入密码</span><br><span class="line">$ vim ~/.ssh/id_rsa.pub </span><br><span class="line">//把这段代码整个复制下来，找到github和coding设置中相应的ssh配置位置，添加进去即可</span><br></pre></td></tr></table></figure><h3 id="从github恢复hexo源码"><a href="#从github恢复hexo源码" class="headerlink" title="从github恢复hexo源码"></a>从github恢复hexo源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:youthliuxi/youthliuxi.github.io</span><br><span class="line">//这里建议使用git@github.com，只有这样，公钥才是有用的，否则就需要每次都输入密码</span><br><span class="line">//倘若<span class="built_in">clone</span>错了，没关系，请网上看【注意】那部分</span><br><span class="line">$ <span class="built_in">cd</span> youthliuxi.github.io</span><br><span class="line">$ npm install --save hexo</span><br><span class="line">$ npm instlal --save hexo-deployer-git</span><br><span class="line">$ hexo g &amp;&amp; hexo d //测试一下，好不好使</span><br></pre></td></tr></table></figure><h3 id="今后两个平台的操作注意事项"><a href="#今后两个平台的操作注意事项" class="headerlink" title="今后两个平台的操作注意事项"></a>今后两个平台的操作注意事项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin hexo</span><br><span class="line">//写博客或者修改博客</span><br><span class="line">$ git add *</span><br><span class="line">$ git commit -m <span class="string">"XXX from windwos or ubuntu"</span></span><br><span class="line">$ git push origin hexo</span><br><span class="line">$ hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从上次使用重装系统又重新配置hexo之后，就一直对hexo备份的问题念念不忘，曾经查到相关信息，可以从hexo托管的那个项目里新建一个分支，将markdown源码和themes主题文件放到这个分支里，就可以实现源码备份了。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="程序猿" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="github" scheme="http://youthliuxi.github.io/tags/github/"/>
    
      <category term="hexo" scheme="http://youthliuxi.github.io/tags/hexo/"/>
    
      <category term="分支" scheme="http://youthliuxi.github.io/tags/%E5%88%86%E6%94%AF/"/>
    
      <category term="master" scheme="http://youthliuxi.github.io/tags/master/"/>
    
  </entry>
  
  <entry>
    <title>windows+ubuntu双系统</title>
    <link href="http://youthliuxi.github.io/2018/04/05/windows-ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://youthliuxi.github.io/2018/04/05/windows-ubuntu双系统/</id>
    <published>2018-04-05T15:24:45.000Z</published>
    <updated>2018-08-16T02:51:41.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我的情况是：使用的笔记本装了个windows10系统，但日前打算较长时间使用linux系统，而对虚拟机里运行linux有一定的不稳定感，所以，才会准备在电脑里，辟出60G的空间，安装ubuntu，让实体机彻底进入我的生活，同时保证不打乱之前的设置。<br><a id="more"></a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>一台windows系统的电脑，其中一个分区能够压缩出40~60G空间</li><li>一颗大于8G的U盘</li><li>ubuntu系统镜像，从<a href="https://www.ubuntu.com/index_kylin" target="_blank" rel="noopener">ubuntu官网</a>下载，推荐选择desktop版，自己的笔记本要啥server版，又hold不住</li><li>一个U盘启动项制作工具，大白菜、老毛桃、u启动、powerISO……个人推荐powerISO，操作方便，不需要才写个PE啥的</li><li>软件easyBCD</li></ul><h2 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h2><ol><li>右键单击“此电脑”，以此选择“管理”-&gt;“磁盘管理”，从目标磁盘中压缩出60G的未分配空间，不需要做任何处理</li><li>使用powerISO打开系统镜像，并将其烧录进U盘里</li><li>进入windows10电源选项，关闭快速启动</li><li>关机，开机，使用bios或者快速选择U盘启动</li><li>依次选择“中文简体”，“安装ubuntu”，“暂时不连接网络”，“安装第三方软件”</li><li>下面进入最关键的分区情况，以下列举我的分区方案，仅供参考（100G方案）</li></ol><table><thead><tr><th>挂载点</th><th style="text-align:center">分区类别</th><th style="text-align:right">用于</th><th style="text-align:right">大小</th></tr></thead><tbody><tr><td>无</td><td style="text-align:center">逻辑分区</td><td style="text-align:right">交换空间</td><td style="text-align:right">内存的两倍</td></tr><tr><td>/</td><td style="text-align:center">主分区</td><td style="text-align:right">Ext4</td><td style="text-align:right">50G</td></tr><tr><td>/boot</td><td style="text-align:center">逻辑分区</td><td style="text-align:right">Ext4</td><td style="text-align:right">500Mb</td></tr><tr><td>/home</td><td style="text-align:center">逻辑分区</td><td style="text-align:right">Ext4</td><td style="text-align:right">剩下的所有</td></tr></tbody></table><ol start="7"><li>为了保证ubuntu绝对不影响windows，我们采用windows的引导，所以，在这里，把“安装启动引导器的设备”选择在/boot所在的分区里</li><li>点击“现在安装”，安装过程就基本结束了，剩下的就是等待了</li><li>安装完成后，去windows系统内，装easyBCD，把ubuntu的/boot所在分区添加进引导项</li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>以上的某个步骤操作不明白可以百度找教程</li><li>以上处理方式保留了windows的引导，所以，如果进入linux系统，会出现，先在windows系统引导中选择一次ubuntu，再从linux的引导中再选择一次ubuntu，目前没有找到比较好的办法关闭GNU grub2引导，我找到的办法是，打开“/etc/default/grub”文件，把time的值从10改为1，然后保存退出，运行【sudo update-grub2】，运行结束，重启即可</li><li>双系统影响windows时间的问题：<ol><li>“运行”-&gt;“regedit”</li><li>以此选择“HKEY_LOCAL_MACHINE”-&gt;“SYSTEM”-&gt;“CurrentControlSet”-&gt;“Control”-&gt;“TimeZoneInformation”</li><li>右侧空白处右键单击，选择“新建”-&gt;“QWORD（64位）值”，我是64位的系统</li><li>文件名“RealTimeIsUniversal”，数值数据“1”，基数“十六进制”，点击“确定”</li><li>重启，搞定。</li></ol></li></ol><h2 id="牢骚"><a href="#牢骚" class="headerlink" title="牢骚"></a>牢骚</h2><p>失败了一个下午，结果发现，安装过程中断报错的原因，竟然是我使用了一个非常老旧的U盘，其内部有存储模块损坏，所以，才会在拷贝数据的时候出现问题。换了一个新买的，就解决问题了，神坑啊，害得我忙活了一下午，差点就放弃了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;我的情况是：使用的笔记本装了个windows10系统，但日前打算较长时间使用linux系统，而对虚拟机里运行linux有一定的不稳定感，所以，才会准备在电脑里，辟出60G的空间，安装ubuntu，让实体机彻底进入我的生活，同时保证不打乱之前的设置。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="程序猿" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="ubuntu" scheme="http://youthliuxi.github.io/tags/ubuntu/"/>
    
      <category term="windows" scheme="http://youthliuxi.github.io/tags/windows/"/>
    
      <category term="双系统" scheme="http://youthliuxi.github.io/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>树莓派入门</title>
    <link href="http://youthliuxi.github.io/2018/04/04/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8/"/>
    <id>http://youthliuxi.github.io/2018/04/04/树莓派入门/</id>
    <published>2018-04-04T15:46:18.000Z</published>
    <updated>2018-07-31T07:35:08.789Z</updated>
    
    <content type="html"><![CDATA[<p>日前购置了最便宜的树莓派版本，树莓派zero w，板载WiFi和蓝牙，但是无屏幕操作一直没有配置成功，在确认完没有对电路造成伤害以后，我就把树莓派封存了起来，等待着，有时间了，可以拿出来玩儿，然而，现在就有时间了，当然最先玩儿它喽（手动滑稽）。<br><a id="more"></a></p><h2 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h2><h4 id="硬件准备-1"><a href="#硬件准备-1" class="headerlink" title="硬件准备"></a>硬件准备</h4><ul><li>树莓派zero w板子一个</li><li>一张T-flash卡（8G以上）</li><li>microUSB数据线一条</li><li>5V2A以上充电插头一个</li><li>miniHDMI转HDMI转接头一个</li><li>HDMI转VGA数据线一条（显示器支持VGA）</li><li>HDMI双公头线一条（显示器支持HDMI）</li></ul><h4 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h4><ul><li>Win32DiskImager.exe软件（用来烧写树莓派系统到内存卡）</li><li>树莓派系统的img文件（从<a href="https://www.raspberrypi.org" target="_blank" rel="noopener">raspberrypi.org</a> 网站下载）</li></ul><h2 id="点亮操作开始"><a href="#点亮操作开始" class="headerlink" title="点亮操作开始"></a>点亮操作开始</h2><ol><li>使用“Win32DiskImager.exe”把img文件烧写进内存卡里</li><li>把内存卡插入树莓派，然后给树莓派通电，接上鼠标、键盘、显示器，就可以正常工作了</li></ol><h2 id="下面我们来聊点不一样的"><a href="#下面我们来聊点不一样的" class="headerlink" title="下面我们来聊点不一样的"></a>下面我们来聊点不一样的</h2><h4 id="没有显示器、鼠标、键盘，只有一台电脑、一条数据线、一个自带WiFi模块的树莓派板子，该如何处理"><a href="#没有显示器、鼠标、键盘，只有一台电脑、一条数据线、一个自带WiFi模块的树莓派板子，该如何处理" class="headerlink" title="没有显示器、鼠标、键盘，只有一台电脑、一条数据线、一个自带WiFi模块的树莓派板子，该如何处理"></a>没有显示器、鼠标、键盘，只有一台电脑、一条数据线、一个自带WiFi模块的树莓派板子，该如何处理</h4><ol><li>使用“Win32DiskImager.exe”把img文件烧写进内存卡里</li><li><p>先不拔下内存卡，打开boot分区，在分区里新建文件“wpa_supplicant.conf”，文件内容如下：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;你的WiFi名称1&quot;</span><br><span class="line">psk=&quot;你的WiFi密码1&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">priority=1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#ssid:网络的ssid</span><br><span class="line">#psk:密码</span><br><span class="line">#priority:连接优先级，数字越大优先级越高（不可以是负数）</span><br><span class="line">#scan_ssid:连接隐藏WiFi时需要指定该值为1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">ssid=&quot;你的WiFi名称2&quot;</span><br><span class="line">psk=&quot;你的WiFi密码2&quot;</span><br><span class="line">key_mgmt=WPA-PSK</span><br><span class="line">priority=1</span><br><span class="line"># 这一块儿有就写没有就不写，也可以加第三个、第四个。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在boot分区下，新建文件“ssh”，不需要任何后缀名，也不需要任何内容</p></li><li>搞定了这两个文件以后，拔下内存卡，插在树莓派上，等待树莓派运行一段时间，估计大概启动完成以后，执行以下操作<ol><li>进入路由器，找到客户端列表，记录下树莓派的内网IP地址</li><li>打开putty，配置信息：ip地址是上面那个ip，端口是22，用户名“pi”，密码“raspberry”</li><li>点击连接，就可以连接上树莓派了</li></ol></li></ol><h2 id="作为服务器的前期配置"><a href="#作为服务器的前期配置" class="headerlink" title="作为服务器的前期配置"></a>作为服务器的前期配置</h2><h4 id="检查拥有的程序，没有就安装"><a href="#检查拥有的程序，没有就安装" class="headerlink" title="检查拥有的程序，没有就安装"></a>检查拥有的程序，没有就安装</h4><ul><li>python2（有）</li><li>python3（有）</li><li>pip（没有）</li><li>vi（有）</li><li>vim（没有）</li><li>tmux（没有）</li></ul><h4 id="安装缺失的软件"><a href="#安装缺失的软件" class="headerlink" title="安装缺失的软件"></a>安装缺失的软件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install vim</span><br><span class="line">sudo apt-get install tmux</span><br><span class="line">sudo apt-get install python-pip python-dev build-essential</span><br><span class="line"><span class="comment"># 这个通常安装的是python2.7版本的pip，下面这个是安装的3.5版本的pip</span></span><br><span class="line">sudo apt-get install python3-pip python3-dev build-essential</span><br></pre></td></tr></table></figure><p>tmux是终端多开的管理工具，非常好用</p><h4 id="ps：多版本的pip使用问题"><a href="#ps：多版本的pip使用问题" class="headerlink" title="ps：多版本的pip使用问题"></a><strong>ps</strong>：多版本的pip使用问题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip</span><br><span class="line">python3 -m pip</span><br></pre></td></tr></table></figure><h2 id="拥有一个微型linux硬件，是一种幸福"><a href="#拥有一个微型linux硬件，是一种幸福" class="headerlink" title="拥有一个微型linux硬件，是一种幸福"></a>拥有一个微型linux硬件，是一种幸福</h2><h4 id="有趣的linux命令总结"><a href="#有趣的linux命令总结" class="headerlink" title="有趣的linux命令总结"></a>有趣的linux命令总结</h4><ul><li>date</li><li>find -name <filename></filename></li><li>sudo passwd root</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日前购置了最便宜的树莓派版本，树莓派zero w，板载WiFi和蓝牙，但是无屏幕操作一直没有配置成功，在确认完没有对电路造成伤害以后，我就把树莓派封存了起来，等待着，有时间了，可以拿出来玩儿，然而，现在就有时间了，当然最先玩儿它喽（手动滑稽）。&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="程序猿" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="linux" scheme="http://youthliuxi.github.io/tags/linux/"/>
    
      <category term="raspberrypi" scheme="http://youthliuxi.github.io/tags/raspberrypi/"/>
    
      <category term="树莓派" scheme="http://youthliuxi.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>VMware装macOS</title>
    <link href="http://youthliuxi.github.io/2018/04/04/VMware%E8%A3%85macOS/"/>
    <id>http://youthliuxi.github.io/2018/04/04/VMware装macOS/</id>
    <published>2018-04-04T15:42:04.000Z</published>
    <updated>2018-07-31T07:35:08.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul><li>一台电脑（运存最好是8G，4G的只能给虚拟机分2G运存，很卡）</li><li>VMware14</li><li>VMware12的mac补丁——unlocker</li><li>MacOS10.12系统镜像<a id="more"></a></li></ul><h2 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h2><h3 id="安装unlocker补丁"><a href="#安装unlocker补丁" class="headerlink" title="安装unlocker补丁"></a>安装unlocker补丁</h3><p>下载unlocker的压缩包，解压后，右键点击“win-install”，选择“以管理员权限运行”，运行完成后，对话框会自动关闭（如果对话框闪退的话，那请移步cmd，进入该文件夹运行）</p><h3 id="打开虚拟机，开始安装"><a href="#打开虚拟机，开始安装" class="headerlink" title="打开虚拟机，开始安装"></a>打开虚拟机，开始安装</h3><p>步骤同一般步骤类似：</p><ol><li>选择“自定义”</li><li>选择“安装程序光盘映像文件”，找到下载好的macOS系统镜像</li><li>选择“Apple Mac OS X(M)”（该选项只有正确安装补丁后才会出现）</li><li>选择虚拟机保存地址（最好空出40G的空间）</li><li>固件类型默认“UEFI”</li><li>配置硬件：CPU、内存、硬盘，酌情处理（内存至少2G，建议4G，其他，自己选择）</li><li>配置完成，暂不开机，如果此时开机会报错，报错了直接关掉，进入下一步操作</li><li>找到虚拟机文件夹，使用记事本打开vmx格式的配置文件<ul><li>在smc.present=”true”这一行的后面，加上smc.version=”0”</li></ul></li><li>保存好配置文件，返回虚拟机，启动系统</li><li>选择语言“以简体中文为主要语言”</li><li>这一步你会看到macOS字样，此时，不要点击“继续”，选择上方菜单栏的“实用工具”-&gt;“磁盘工具”，选中VMware的那块磁盘，选择“抹除”（名称随意，格式、方案固定不变，单击“抹除”）</li><li>点击“继续”，选择刚刚被你命名过的那个磁盘，点击“继续”</li><li>此时，你会进入漫长的等待、自动重启、常规初始化设置</li><li>bingo，一个完美的mac系统就被安装进虚拟机里了</li></ol><h3 id="如果你想要安装VMware-Tools的话"><a href="#如果你想要安装VMware-Tools的话" class="headerlink" title="如果你想要安装VMware Tools的话"></a>如果你想要安装VMware Tools的话</h3><ul><li>虚拟机关机后，在菜单栏以此选择：“虚拟机”-&gt;“设置”-&gt;”CD/DVD光驱”-&gt;“使用物理驱动器”，然后开机，在开机时选择“安装VMware Tools”</li><li>安装完成后重启提示隐私设置，按要求设置即可</li><li>注意：即使你不安装WMware Tools，也请把选项选成“使用物理驱动器”，那样你会发现，原本卡成翔的系统，突然间不卡了，还很流畅</li></ul><h3 id="如何优化卡成翔的虚拟机macOS"><a href="#如何优化卡成翔的虚拟机macOS" class="headerlink" title="如何优化卡成翔的虚拟机macOS"></a>如何优化卡成翔的虚拟机macOS</h3><ul><li>安装VMware Tools（往上看）</li><li>在OS X里安装并设置开机运行beamoff（据说是神器 安装设置过程如下）<ol><li>“系统偏好设置” 进入”辅助功能” 然后勾选”减少透明度”</li><li>“系统偏好设置” 进入”Dock” 最小化窗口时使用: 选择“缩放效果”</li><li>“系统偏好设置” 进入”扩展” 然后将不使用的组件勾掉</li><li>下面是beamoff设置为开机自动运行方法：</li><li>下载beamoff.zip mac会自动解压 得到 beamoff.app</li><li>系统偏好设置 - 用户与群组 - 选中你自己的用户名 - 选择 “登录项” 选项卡 - 点 + 号</li><li>找到你下载的beamoff.app 选中 点击添加</li><li>下一次开机时 需要再次确认打开软件 因为这个软件不是mac的信任软件</li></ol></li><li>虚拟机-设置-选项-高级- 禁用内存页面修整（关机后操作）</li></ul><h3 id="至此，一个完美的虚拟机黑苹果，就这样诞生了"><a href="#至此，一个完美的虚拟机黑苹果，就这样诞生了" class="headerlink" title="至此，一个完美的虚拟机黑苹果，就这样诞生了"></a>至此，一个完美的虚拟机黑苹果，就这样诞生了</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一台电脑（运存最好是8G，4G的只能给虚拟机分2G运存，很卡）&lt;/li&gt;
&lt;li&gt;VMware14&lt;/li&gt;
&lt;li&gt;VMware12的mac补丁——unlocker&lt;/li&gt;
&lt;li&gt;MacOS10.12系统镜像
    
    </summary>
    
      <category term="程序猿" scheme="http://youthliuxi.github.io/categories/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="mac" scheme="http://youthliuxi.github.io/tags/mac/"/>
    
      <category term="macOS" scheme="http://youthliuxi.github.io/tags/macOS/"/>
    
      <category term="VMware" scheme="http://youthliuxi.github.io/tags/VMware/"/>
    
      <category term="黑苹果" scheme="http://youthliuxi.github.io/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
  </entry>
  
  <entry>
    <title>python学习笔记02</title>
    <link href="http://youthliuxi.github.io/2018/04/01/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B002/"/>
    <id>http://youthliuxi.github.io/2018/04/01/python学习笔记02/</id>
    <published>2018-04-01T14:20:32.000Z</published>
    <updated>2018-07-31T07:35:08.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><ul><li>变量和类型</li><li>常见字符串处理</li><li>条件判断</li><li>循环控制</li><li>函数<a id="more"></a></li></ul><h4 id="变量和类型"><a href="#变量和类型" class="headerlink" title="变量和类型"></a>变量和类型</h4><ul><li>基本变量类型<ul><li>整数</li><li>浮点数</li><li>字符串</li><li>布尔型</li><li>空值</li><li>函数</li><li>模块</li><li>类型</li><li>自定义类型<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">print(type(<span class="number">1234</span>)) <span class="comment">#in</span></span><br><span class="line">print(type(<span class="number">1234.56</span>)) <span class="comment">#float</span></span><br><span class="line">print(type(<span class="string">'abc'</span>)) <span class="comment">#str</span></span><br><span class="line">print(type([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">'a'</span>, <span class="string">'b'</span>])) <span class="comment">#list</span></span><br><span class="line">print(type((<span class="number">1</span>,<span class="string">'abc'</span>))) <span class="comment">#tuple</span></span><br><span class="line">print(type(set([<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="number">3</span>]))) <span class="comment">#set</span></span><br><span class="line">print(type(&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>&#125;)) <span class="comment">#dict</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(a,b,c)</span>:</span></span><br><span class="line">print(a,b,c)</span><br><span class="line">print(type(func)) <span class="comment">#function</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">print(type(string)) <span class="comment">#module</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line">print(type(MyClass)) <span class="comment">#type</span></span><br><span class="line">my_class = MyClass()</span><br><span class="line">print(type(my_class)) <span class="comment">#__main__.MyClass</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="常见字符串处理"><a href="#常见字符串处理" class="headerlink" title="常见字符串处理"></a>常见字符串处理</h4><ul><li>去除空格及特殊字符：strip，istrip，rstrip</li><li>复制字符串：str1 = str2</li><li>连接字符串<ul><li>str2 += str1</li><li>new_str = str2 + str1</li></ul></li><li>查找字符串：pos = str1.index(str2)</li><li>比较字符串： cmp(str1,str2)</li><li>字符串长度：len(str)</li><li>大小写转换<ul><li>u_str = str.upper()</li><li>l_str = str.lower()</li></ul></li><li>首字母大写：str.capitalize();string.capword(str)</li><li>分割与合并字符串：split，splitlines，join</li><li>类型转换：int，float转换</li><li>格式化字符串<h4 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h4><h4 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h4><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;大纲&quot;&gt;&lt;a href=&quot;#大纲&quot; class=&quot;headerlink&quot; title=&quot;大纲&quot;&gt;&lt;/a&gt;大纲&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;变量和类型&lt;/li&gt;
&lt;li&gt;常见字符串处理&lt;/li&gt;
&lt;li&gt;条件判断&lt;/li&gt;
&lt;li&gt;循环控制&lt;/li&gt;
&lt;li&gt;函数
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://youthliuxi.github.io/tags/python/"/>
    
      <category term="笔记" scheme="http://youthliuxi.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python学习笔记01</title>
    <link href="http://youthliuxi.github.io/2018/04/01/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"/>
    <id>http://youthliuxi.github.io/2018/04/01/python学习笔记01/</id>
    <published>2018-04-01T14:06:28.000Z</published>
    <updated>2018-07-31T07:35:08.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本部分"><a href="#基本部分" class="headerlink" title="基本部分"></a>基本部分</h2><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><p>1.数组<br>2.字符串<br>3.系统标准库自带的类型<br>4.如何实现常用数据结构：链表、堆栈、二叉树…<br><a id="more"></a></p><h4 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h4><ul><li>标准输入输出：print，echo，input…</li><li>文本读写：文本/二进制<ul><li>文本：行读写</li><li>二进制：偏移量 + 大小</li></ul></li><li>格式化字符串：print(“%s;%d” %(“aaa”,100))</li></ul><h2 id="提高部分"><a href="#提高部分" class="headerlink" title="提高部分"></a>提高部分</h2><h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><ul><li>抛出和捕获异常：try/catch，try/except</li><li>异常和错误的区别以及应用场合</li></ul><h4 id="常用算法"><a href="#常用算法" class="headerlink" title="常用算法"></a>常用算法</h4><ul><li>分治</li><li>贪心</li><li>动态规划</li></ul><h4 id="数据库访问"><a href="#数据库访问" class="headerlink" title="数据库访问"></a>数据库访问</h4><ul><li>建立连接</li><li>执行SQL查询</li><li>读取查询记录</li></ul><h4 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h4><ul><li>继承</li><li>多态</li><li>静态变量和方法</li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>多线程/进程（《windows高级编程》）</li><li>匿名函数</li><li>语言相关特定知识<ul><li>Java的反射</li><li>C++的模板</li><li>Python的协程</li></ul></li></ul><p>PS：<a href="http://www.lintcode.com" target="_blank" rel="noopener">lintcode.com</a>；<a href="https://github.com/yingl" target="_blank" rel="noopener">yingl</a></p><h2 id="python基础入门"><a href="#python基础入门" class="headerlink" title="python基础入门"></a>python基础入门</h2><h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><ul><li>True</li><li>False</li><li>None(NULL/null)</li></ul><h4 id="对象和容器"><a href="#对象和容器" class="headerlink" title="对象和容器"></a>对象和容器</h4><ul><li>class</li><li>import</li><li>form</li><li>del</li></ul><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><ul><li>if</li><li>elif</li><li>else</li><li>is</li><li>in</li><li>assert</li></ul><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><ul><li>for</li><li>while</li><li>continue</li><li>break</li><li>pass</li></ul><h4 id="异常-1"><a href="#异常-1" class="headerlink" title="异常"></a>异常</h4><ul><li>raise</li><li>try</li><li>except</li><li>finally</li><li>as</li></ul><h3 id="常用运算符"><a href="#常用运算符" class="headerlink" title="常用运算符"></a>常用运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><ul><li>+-*/</li><li>%</li><li>**</li><li>\//</li></ul><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><ul><li>>,&gt;=</li><li>&lt;,&lt;=</li><li>==（同或）</li><li>!=</li></ul><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><ul><li>and</li><li>or</li><li>not<br>(Ps：没有异或)</li></ul><h4 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h4><ul><li>>&gt;（16 &gt;&gt; 2是4）</li><li>&lt;&lt;（16 &lt;&lt; 2是64）</li><li>&amp;</li><li>|</li><li>^（按位异或）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_pow2</span><span class="params">(n)</span>:</span></span><br><span class="line"><span class="keyword">return</span> (n &amp; (n - <span class="number">1</span>)) ==<span class="number">0</span></span><br><span class="line"><span class="comment"># 判断是否为2的倍数，按位与</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a>基本语法</h3><ul><li>缩进</li><li>注释<blockquote><p># 单行注释<br>‘’’<br>多行注释<br>‘’’</p></blockquote></li><li>多行代码表示<blockquote><p>“””<br># 这里面写多行代码，print出来就是换行的效果<br>“””</p></blockquote></li><li><p>中文支持（默认支持utf-8）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># conding:utf-8</span></span><br></pre></td></tr></table></figure></li><li><p>引号问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"abc'123'xyz"</span>)</span><br><span class="line">print(<span class="string">'abc"123"xyz'</span>)</span><br><span class="line">print(<span class="string">'abc\'123\'xyz'</span>)</span><br><span class="line">print(<span class="string">"abc\"123\"xyz"</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-x与3-x的区别"><a href="#2-x与3-x的区别" class="headerlink" title="2.x与3.x的区别"></a>2.x与3.x的区别</h2><ul><li>print函数：3.x必须加上()。</li><li>Unicode：3.x默认使用Unicode编码</li><li>除法运算：3.x整数相除也能得出浮点数结果</li><li>异常：3.x只能抛出继承自BaseException的异常</li><li>xrange：3.x取消了xrange，range与xrange一样使用惰性计算实现<br>（PS：原本xrange使用惰性计算，效率高，range效率低下，3.x版本将两者同一，使用range一点问题都没有）</li><li>二/八进制：3.x必须写成0b1011和0o723614</li><li>不等式：3.x取消了‘&lt;&gt;’，只有‘!=’</li><li>“表达式：3.x必须使用repr函数</li><li>多个模块改名：Queue-&gt;queue，repr-&gt;reprlib …</li><li>数据类型<ul><li>3.x取消了long，统一为int</li><li>新增bytes类型，并可与string相互转换</li><li>dict的keys/items/values方法返回迭代器，iterkeys函数被废弃，has_key被in取代</li></ul></li><li>bytes格式的灵异现象<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print((<span class="number">1024</span>).to_bytes(<span class="number">2</span>, byteorder =<span class="string">'big'</span>))</span><br><span class="line">print((<span class="number">1024</span>).to_bytes(<span class="number">4</span>, byteorder =<span class="string">'little'</span>))</span><br><span class="line">print((<span class="number">-1024</span>).to_bytes(<span class="number">2</span>, byteorder =<span class="string">'big'</span>, signed = <span class="keyword">True</span>))</span><br><span class="line">print((<span class="number">-1024</span>).to_bytes(<span class="number">4</span>, byteorder =<span class="string">'little'</span><span class="string">', signed = True))</span></span><br><span class="line"><span class="string"># 以下是两个不同的方法，显示的十六进制结果不同</span></span><br><span class="line"><span class="string"># 因为4的ASCII码是34</span></span><br><span class="line"><span class="string">print((3124).to_bytes(2, byteorder ='</span>big<span class="string">'))</span></span><br><span class="line"><span class="string">print("%x" % 3124)</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本部分&quot;&gt;&lt;a href=&quot;#基本部分&quot; class=&quot;headerlink&quot; title=&quot;基本部分&quot;&gt;&lt;/a&gt;基本部分&lt;/h2&gt;&lt;h4 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h4&gt;&lt;p&gt;1.数组&lt;br&gt;2.字符串&lt;br&gt;3.系统标准库自带的类型&lt;br&gt;4.如何实现常用数据结构：链表、堆栈、二叉树…&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://youthliuxi.github.io/tags/python/"/>
    
      <category term="笔记" scheme="http://youthliuxi.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>没别的想法，就是想存一下雷总20年前的汇编代码</title>
    <link href="http://youthliuxi.github.io/2018/02/19/%E6%B2%A1%E5%88%AB%E7%9A%84%E6%83%B3%E6%B3%95%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%83%B3%E5%AD%98%E4%B8%80%E4%B8%8B%E9%9B%B7%E6%80%BB20%E5%B9%B4%E5%89%8D%E7%9A%84%E6%B1%87%E7%BC%96%E4%BB%A3%E7%A0%81/"/>
    <id>http://youthliuxi.github.io/2018/02/19/没别的想法，就是想存一下雷总20年前的汇编代码/</id>
    <published>2018-02-19T15:06:30.000Z</published>
    <updated>2018-07-31T07:35:08.789Z</updated>
    
    <content type="html"><![CDATA[<p>以前从来没黑过我雷总，但是，也没有说多关注他，只是比较看好小米手机的发展。今天，我正式宣布，成为雷粉，武大计算机系、两年修满四年学分、汇编语言满分通过、写过大大小小各种软件、参与编著《深入DOS编程》一书、投资了多个有潜力的企业、带着小米在安卓市场杀出一条血路，这tm就是神啊~<br>（PS：下面这个汇编代码，2185行）<a id="more"></a></p><pre>;; RI.ASM  Revision 2.12         [ July 12, 1994 ]Revision        equ     'V2.12 ';; **************************************************************************; *                                                                        *; *  RAMinit  Release 2.0                                                  *; *  Copyright (c) 1989-1994 by Yellow Rose Software Co.                   *; *  Written by Mr. Leijun                                                 *; *                                                                        *; *  Function:                                                             *; *    Press HotKey to remove all TSR program after this program           *; *                                                                        *; **************************************************************************; ..........................................................................; Removed Softwares by RI:;   SPDOS v6.0F, WPS v3.0F;   Game Busters III, IV;   NETX ( Novell 3.11 );   PC-CACHE;   Norton Cache;   Microsoft SmartDrv;   SideKick 1.56A;   MOUSE Driver;   Crazy (Monochrome simulate CGA program);   RAMBIOS v2.0;   386MAX Version 6.01; ..........................................................................; No cancel softwares:;   Windows 3.1 MSD;; No removed TSR softwares:;   MS-DOS fastopen;   Buffers, Files ... (QEMM 6.0);   QCache (386MAX 6.01); ..........................................................................;COMMENT * V2.04  Use mouse driver software reset function to initiation mouse        2/17/1993 by  Mr. Lei and Mr. Feng V2.05  RI cannot work in Windows DOS prompt        3/9/1993  by Mr. Lei V2.06  1. When XMS cannot allocate 1K memory, RI halts.        2. RI repeat deallocates EMS memory. V2.07  HotKey Setup Error        4/25/1993 by Mr. Lei V2.08  KB Buffer V2.10  1. Release high memory blocks (EMM386 QEMM386 S-ICE 386MAX)        2. RI copies flag V2.12  1. Exists a critical error in Init 8259 procedure        2. Save [40:F0--FF] user data area*                dosseg                .model tiny                .code                locals  @@                org     100hStart:          jmp     Main                org     103h  True          equ     1  False         equ     0  MaxHandles    equ     100h        INT3    macro                out     0ffh,al                endm  ;  ;             HotKey Status                             Test Var  ;            ---------------                         ---------------  ;  ;  7 6 5 4 3 2 1 0                                    417  418  496  ;  . . x . x . . .    Left Alt is pressed              8    2  ;  x . . . x . . .    Right Alt is pressed             8         8  ;  . . . x . x . .    Left Ctrl is pressed             4    1  ;  . x . . . x . .    Right Ctrl is pressed            4         4  ;  . . . . . . x .    Left Shift is pressed            2  ;  . . . . . . . x    Right Shift is pressed           1  ;  LeftAlt       equ     00101000b  RightAlt      equ     10001000b  LeftCtrl      equ     00010100b  RightCtrl     equ     01000100b  LeftShift     equ     00000010b  RightShift    equ     00000001b  HotKey        db      LeftCtrl or RightCtrl  DataBegin     dw      0  NextDataSeg   dw      0ffffh  oldInt2F_addr dw      0, 0  XMS_control   dw      0, 0  Handle_begin  dw      0  cvtOfs        dw      0       ; DOS 3.0 equ 0 and above DOS 4.0 is 1                org     104h                db      0dh                db      Revision                db      ??date                db      26                org     114h  tsrLength     dw      0  MachineID     db      0FCh    ; IBM PC/AT  AuxHotKey     db      0       ; 2Dh     ; 'X' Scan Code  AuxHotKeyName db      'X$      '  Power         db      True  Flag          db      '!'  Kbd102        db      0  NoFlag        db      0  StopFlag      db      1  DosEnv        dw      0  WorkSeg       dw      0  PrevDataSeg   dw      0  Copies        db      '1'  old_8259      db      0       ; 21h port                db      0       ; a1h port  Status        dw      0  XMSbit        equ     00000001b  EMSbit        equ     00000010b  SKbit         equ     10000000bGoINT1C:        db      0eah  oldInt1C_addr dw      0, 0newINT1C:                test    cs:Status, SKbit                jnz     GoINT1C                cmp     cs:StopFlag, 0                jz      @@0;; Mr. Lei  2/8/1993; Problem: if WPS quit and reenter, old RI cann't control keyboard.;                push    ds                push    ax                xor     ax, ax                mov     ds, ax                mov     ax, ds:[9*4]                cmp     ax, offset NewInt9                pop     ax                pop     ds                jnz     GoINT1C                mov     cs:StopFlag, 0        @@0:    push    ax                push    ds                push    es                xor     ax, ax                mov     ds, ax                mov     es, ds:[9*4+2]                cmp     word ptr es:[101h], 'IE'        ; 'LEI'                jz      @@1                cli                mov     cs:StopFlag, 1                mov     ax, ds:[9*4]                mov     cs:oldINT9_addr2, ax                mov     ax, ds:[9*4+2]                mov     cs:oldINT9_addr2[2], ax                mov     ds:[9*4], offset newINT9_2                mov     ds:[9*4+2], cs                sti        @@1:    pop     es                pop     ds                pop     ax                jmp     GoINT1C; ----------------------------------------------------------------------;  INT2F Func;;     AX = C0D7h   Return RI segment in AX;     AX = C0D8h   Removes all TSR programs after RI;     AX = C0D9h   Removes all TSR programs include RI;     AX = C0DAh   Removes all RI copies; ----------------------------------------------------------------------newINT2F:                cmp     ax, 0c0d7h      ; LEI Hanzi GB Code                jnz     @@1                push    cs                pop     ax                iret        @@1:    cmp     ax, 0c0d7h+1                jnz     @@2                jmp     KeepSelf        @@2:    cmp     ax, 0c0d7h+2                jnz     @@3                jmp     NoKeepSelf        @@3:    cmp     ax, 0c0d7h+3                jnz     @@9                mov     cs:NextDataSeg, -1                mov     cs:Copies, '1'                jmp     NoKeepSelf        @@9:    jmp     dword ptr cs:oldInt2F_addrCallInt9:                retnewINT9_2:                mov     cs:NoFlag, 1                pushf                db      9ah             ; call far ptr oldint9_addr  oldInt9_Addr2 dw      0, 0                jmp     newINT9_procnewINT9:                pushf                db      9ah             ; call far ptr oldint9_addr  oldInt9_Addr  dw      0, 0                cmp     cs:NoFlag, 0                jz      newINT9_proc                mov     cs:NoFlag, 0                iretnewINT9_proc:                cmp     cs:Flag, '!'    ; busy ?                jnz     @@0                iret        @@0:                mov     cs:Flag, '!'    ; set busy flag                push    ax              ; cmp hot key                push    bx                push    es                mov     ax,40h                mov     es,ax                cmp     cs:AuxHotKey, 0                jz      @@_1                mov     bx, es:[1ah]                cmp     bx, es:[1ch]                jz      @@10                push    bx                mov     bl, es:[bx+1]                cmp     bl, cs:AuxHotKey                pop     bx                jnz     @@10        @@_1:                mov     ah,es:[17h]     ; test CTRL SHIFT ALT                mov     al,cs:HotKey                push    ax                and     ax,0f0fh                cmp     al,ah                pop     ax                jnz     @@10                cmp     cs:Kbd102, True                jnz     @@1                shr     al, 1                shr     al, 1                shr     al, 1                shr     al, 1                push    ax                mov     ah, es:[18h]                and     ax, 303h                cmp     al, ah                pop     ax                jnz     @@10                mov     ah, es:[96h]                shr     ax, 1                shr     ax, 1                and     ax, 303h                cmp     al, ah                jnz     @@10                cmp     cs:AuxHotKey, 0                jz      @@_3                inc     bx                inc     bx                cmp     bx, 3eh                jb      @@_2                mov     bx, 1eh        @@_2:                mov     es:[1ah], bx        @@_3:                call    IsWinDos                or      ax, ax                jz      @@1                call    Beep        @@10:                sti                pop     es                pop     bx                pop     ax                mov     cs:Flag, ' '    ; no busy                iret        @@1:                                            ; OK                pop     es                pop     bx                pop     axKeepSelf:                call    RemoveTSR                push    es                mov     es,cs:WorkSeg                mov     dx,es:tsrLength                mov     di,dx                mov     al,0h           ; Aug 24, 1993                mov     cx,100h                rep     stosb                pop     es                int     27hNoKeepSelf:                mov     ax,0e07h                int     10h                mov     cs:clsStr, 47h  ; Color (White in Red)                call    RemoveTSR                dec     cs:Copies                call    RestoreSelfIntVec                push    es                cmp     cs:PrevDataSeg, 0                jz      @@1                mov     es, cs:PrevDataSeg                mov     es:NextDataSeg, -1        @@1:    pop     es                mov     ax, 4c00h                int     21h; ---------------------------------------------------------------------------IsWinDOS:                mov     ax, 1600h                int     2fh                cmp     al, 01h                jz      @@9                cmp     al, 0ffh                jz      @@9                     ; Windows/386 Version 2.X                cmp     al, 00h                jz      @@1                cmp     al, 80h                jnz     @@9                     ; Windows 3 in enhanced mode                                                ; Version number in AL/AH        @@1:                mov     ax, 4680h                int     2fh                cmp     al, 80h                jnz     @@9                xor     ax, ax                jmp     @@10        @@9:    mov     ax, 1        @@10:   ret; -----------------------------------------------------------------------RestoreSelfIntVec:                cmp     Copies, '0'                jz      @@0                ret        @@0:                cli                push    cs                pop     ds                xor     ax, ax                mov     es, ax                mov     si, offset oldInt9_Addr                mov     di, 9*4                movsw                movsw                mov     si, offset oldInt2F_Addr                mov     di, 2Fh*4                movsw                movsw                mov     si, offset oldInt1C_Addr                mov     di, 1Ch*4                movsw                movsw                sti                ret; ------------- KERNEL PROGRAM ----------------------------------------------RemoveTSR:                pop     ax                cli                     ; Set stack                mov     sp, cs                mov     ss, sp                mov     sp, 100h                sti                push    ax                cmp     cs:Power, True                jnz     @@1                call    Init8259        @@1:                push    cs                pop     ds        @@_0:                mov     ax,ds:NextDataSeg                cmp     ax, -1                jz      @@_1                mov     cs:PrevDataSeg, ds                mov     ds, ax                jmp     @@_0        @@_1:   mov     si,ds:DataBegin                mov     cs:WorkSeg, ds                lodsw                cmp     ax, 'XX'                jz      @@_2                call    Beep                ret        @@_2:                call    RestoreEnvStr                call    RestoreMCB         ; restore current mcb                call    CloseFiles                call    RestorePort                call    RestoreLEDs                call    RestoreVecList     ; Restore vectors list                call    RestoreFloppyParam                cmp     cs:Power, True                jnz     @@2                call    RestoreCVTchain    ; Restore cvt chain                call    RestoreMemoryManager        @@2:                call    RestoreBiosData                call    Enable8259                mov     ah, 1                int     16h                call    RestoreClockSpeed                call    CloseSpeaker                call    ResetDisk                call    UpdateTime                call    ClosePRN                mov     bx,cs:WorkSeg                mov     ah,50h                int     21h                ; Set PSP segment                mov     ax,3                int     10h                ; Set display mode                call    InitPRN                call    InitMouse                mov     al, cs:Copies                cmp     al, '1'                ja      @@_sh1                mov     cs:ShowCopies, '*'                jmp     @@_sh2        @@_sh1: mov     cs:ShowCopies, al        @@_sh2:                mov     si, offset clsStr                call    ColorPrintStr                mov     cs:Flag, ' '       ; no busy                cmp     Copies, '1'                jnz     @@_end                mov     cs:StopFlag, 0        @@_end:                call    ClearKB_buffer                retBeep:                mov     ax,0e07h                int     10h                ret; #########################################################################ClearKB_Buffer:                push    es                push    bx                mov     bx, 0040h                mov     es, bx                cli                mov     bx, es:[1ah]                mov     es:[1ch], bx                sti                pop     bx                pop     es                retInit8259:        ;       cmp     cs:Copies, '1'        ;       jz      @@1        ;       ret        @@1:                cmp     cs:MachineID, 0fch                ja      @@pc_xt        @@AT:                mov     bx,870h         ;                mov     al,0            ;                out     0F1h,al         ;                jcxz    $+2                jcxz    $+2                mov     al,11h          ; ICW1                out     0A0h,al                jcxz    $+2                jcxz    $+2                out     20h,al                jcxz    $+2                jcxz    $+2                mov     al,bl           ; ICW2                out     0A1h,al                jcxz    $+2                jcxz    $+2                mov     al,bh                out     21h,al                jcxz    $+2                jcxz    $+2                mov     al,2            ; ICW3                out     0A1h,al                jcxz    $+2                jcxz    $+2                mov     al,4                out     21h,al                jcxz    $+2                jcxz    $+2                mov     al,1            ; ICW4                out     0A1h,al                jcxz    $+2                jcxz    $+2                out     21h,al                jcxz    $+2                jcxz    $+2                mov     al,0FFh         ; OCW1                out     0A1h,al                jcxz    $+2                jcxz    $+2                out     21h,al                ret        @@PC_XT:                mov     al,13h          ; ICW1                out     20h,al                jcxz    $+2                jcxz    $+2                mov     al,8            ; ICW2                out     21h,al                jcxz    $+2                jcxz    $+2                mov     al,9            ; ICW4                out     21h,al                jcxz    $+2                jcxz    $+2                mov     al,0FFh         ; OCW1                out     21h,al                retEnable8259:                mov     ax, word ptr cs:old_8259                out     021h,al                jcxz    $+2                jcxz    $+2                mov     al,ah                out     0a1h,al         ; DEC PC Bus Mouse                ret                     ; July 1994 by Mr. Lei; -------------------------------------------------------------------------RestoreBiosData:                lodsw                cmp     ax, '--'                jz      @@1                call    Beep                ret        @@1:    push    es                push    di                mov     di, 40h                mov     es, di                mov     di, 10h                movsw                mov     di, 0a8h         ; [40h:a8h]                movsw                movsw                mov     di, 49h                mov     cx, 1dh                rep     movsb                mov     di, 0f0h         ; User data                mov     cx, 8                rep     movsw                pop     di                pop     es                ret; -------------------------------------------------------------------------RestoreMCB:                push    ds                push    es                lodsw                           ; 'MZ'        @@0:    lodsw                cmp     ax, 'MM'                jz      @@1                mov     es,ax                xor     di,di                movsb                movsw                movsw                inc     ax                mov     bx, ds                cmp     ax, bx                jz      @@10                mov     byte ptr es:[8], 0      ; Aug 24, 1993        @@10:   cmp     byte ptr es:[0], 'Z'                jnz     @@0                mov     byte ptr es:[10h], 0                jmp     @@0        @@1:                pop     es                pop     ds                ret; -------------------------------------------------------------------------CloseFiles:                mov     ax, 5           ; Begin handle                push    ds                push    si                mov     cx, 15          ; Max handle                sub     cx, ax                inc     cx                mov     bx, ax        @@1:    push    bx                push    cx                mov     ah, 3eh                int     21h                pop     cx                pop     bx                inc     bx                loop    @@1                pop     si                pop     ds                ret; -------------------------------------------------------------------------RestorePort:                mov     di, 40h            ; restore port                mov     es, di                xor     di, di                mov     cx, 8                rep     movsw                ret; -------------------------------------------------------------------------RestoreLEDs:                lodsb                and     al, 11110000b      ; LED status                mov     ah, es:[17h]                and     ah, 00001111b                or      ah, al                and     ah, 0f0h           ; Clear CTRL ALT SHIFT                mov     es:[17h], ah                ret; -------------------------------------------------------------------------RestoreEnvStr:                lodsw                push    si                push    di                push    ds                push    es                mov     es, cs:DosEnv                mov     ds, ax                xor     si, si                mov     di, si        @@0:    lodsb                or      al, al                jnz     @@1                cmp     byte ptr ds:[si], 0                jz      @@2        @@1:    stosb                jmp     @@0        @@2:    stosb                stosb                pop     es                pop     ds                pop     di                pop     si                ret; -----------------------------------------------------------------------RestoreVecList:                xor     ax,ax                mov     di,ax                mov     es,ax                mov     cx,100h        @@0:    lodsw                xchg    dx, ax                lodsw                cmp     dx, 'EL'                jnz     @@1                cmp     al, 'I'                jnz     @@1                sub     cl, ah                push    cx                mov     cl, ah                mov     ax, es:[di-4]                mov     dx, es:[di-2]         @@a:   stosw                xchg    ax, dx                stosw                xchg    ax, dx                loop    @@a                pop     cx                or      cx, cx                jz      @@9                jmp     @@0        @@1:                xchg    ax, dx                stosw                xchg    ax, dx                stosw                loop    @@0        @@9:                ret;----------------------------------------------------------------------------RestoreFloppyParam:                                     ; Mr. Lei   2/10/1992                push    es                push    ax                xor     ax, ax                mov     es, ax                mov     byte ptr es:[525h], 2                pop     ax                pop     es                ret;---------------------------------------------------------------------------RestoreCVTchain:                lodsw                cmp     ax, 'VC'                jz      @@_0                call    Beep                ret        @@_0:                push    ax                push    cx                push    es        ; -----------------------------------------------------------------                lodsw                   ; DPB                mov     di, ax                lodsw                mov     es, ax        @@1:    lodsb                inc     di                stosb                add     di, cs:cvtOfs                add     di, 10h                movsw                movsw                les     di, es:[di+2]                cmp     di, -1                jnz     @@1        ; -----------------------------------------------------------------                lodsw                   ; DCB                mov     di, ax                lodsw                mov     es, ax                xor     ax, ax                dec     ax                stosw        ; -----------------------------------------------------------------                lodsw                   ; Device Driver Chain                mov     di, ax                lodsw                mov     es, ax                xor     cx, cx        @@9:    push    di                mov     cl, 5                rep     movsw                pop     di                les     di, es:[di]                mov     ax, di                inc     ax                jnz     @@9                pop     es                pop     cx                pop     ax                ret; ----------------------------------------------------------------------------RestoreMemoryManager:                test    cs:Status, XMSbit                jz      @@1                call    LoadXMSstatus        @@1:                test    cs:Status, EMSbit                jz      @@2                call    LoadEMSstatus        @@2:                retLoadEMSstatus:                lodsw                cmp     ax, 'ME'                jz      @@_0                call    Beep                ret        @@_0:                lodsw                mov     cx, ax                xor     dx, dx        @@_1:   push    ds                push    si                push    dx                push    cx        @@0:    cmp     dx, ds:[si]                jz      @@1                add     si, 4                loop    @@0                push    cx                mov     cx, 5        @@__0:  mov     ah, 45h         ; Deallocate Handle and Memory                int     67h                or      ah, ah                jz      @@__1                loop    @@__0        @@__1:  pop     cx        @@1:                pop     cx                pop     dx                pop     si                pop     ds                inc     dx                cmp     dx, 100h                jb      @@_1                shl     cx, 1                shl     cx, 1                add     si, cx                retLoadXMSstatus:                lodsw                cmp     ax, 'MX'                jz      @@_0                call    Beep                ret        @@_0:                lodsw                mov     cx, ax                jcxz    @@5        @@1:                lodsw                mov     dx, ax        @@2:    push    dx                mov     ah, 0ah                 ; free                call    dword ptr cs:xms_control                or      ax, ax                pop     dx                jnz     @@4                cmp     bl, 0abh                jnz     @@4                push    dx                mov     ah, 0dh                 ; unlock                call    dword ptr cs:xms_control                or      ax, ax                pop     dx                jmp     @@2        @@4:    loop    @@1        @@5:    ret                endp; -----------------------------------------------------------------------CloseSpeaker:                in      al, 61h                and     al, 0fch                out     61h, al                ret; -----------------------------------------------------------------------RestoreClockSpeed:                mov     al, 00110110b                out     43h, al                xor     ax, ax                out     40h, al                out     40h, al                ret; -----------------------------------------------------------------------ResetDisk:                xor     ax, ax                xor     dx, dx                int     13h             ; Restore A                inc     dx                int     13h             ; Restore B                mov     dl, 80h                int     13h             ; Restore C                ret; --------------------------------------------------------------------------ClosePRN:                mov     ah, 51h         ; Get PSP seg                int     21h                mov     es, bx                mov     ax, es:[16h]    ; Prev PSP seg                cmp     ax, bx                jnz     @@9                mov     ax, 3e00h       ; COMMAND                mov     bx, 4                int     21h        @@9:                retInitPRN:                mov     ax, 3e00h                mov     bx, 4           ; PRN                int     21h                mov     ax, 3d01h                mov     dx, offset PRNname                push    cs                pop     ds                int     21h                retPRNname         db      'PRN',0InitMouse:                              ; 2/16/1993 by Mr. Lei                push    es                xor     ax, ax                mov     es, ax                cmp     word ptr es:[33h*4+2], 0                jz      @@0                cmp     word ptr es:[33h*4], 0                jz      @@0                mov     ax, 21h                int     33h             ; Hook Mouse Interrupt        @@0:    pop     es                ret; ------------- CMOS CLOCK set to System -----------------------------------UpdateTime:                call    GetRealTime                mov     ah, 2dh                int     21h                retGetRealTime:                mov     ah,2                int     1Ah                mov     al,ch                call    bcdxchg                mov     ch,al                mov     al,cl                call    bcdxchg                mov     cl,al                mov     al,dh                call    bcdxchg                mov     dh,al                mov     dl,0                retBCDxchg:                push    ax                push    cx                mov     cl,4                shr     al,cl                pop     cx                mov     bl,0Ah                mul     bl                pop     bx                and     bl,0Fh                add     al,bl                ret; -----------------------------------------------------------------------; Display stringColorPrintStr:                lodsb                mov     bh, al          ; color                xor     cx, cx                mov     dx, 014fh                mov     ax, 0600h                int     10h                mov     ah, 02          ; GotoXY (0, 0)                xor     dx, dx                mov     bh, 0                int     10hPrintStr:                push    cs                pop     ds                xor     bx, bx        @@1:    lodsb                cmp     al, '$'                jz      @@2                or      al, al                jz      @@2                mov     ah, 0eh                int     10h                jmp     short @@1        @@2:    mov     al, cs:clsStrcolor                mov     cs:clsStr, al                ret; -----------------------------------------------------------------------  Self          dw      0  clsStrcolor   db      17h  clsStr        db      17h             ; Color (White in Blue)    db ' RAMinit  Version 2.12  (c) 1989-1994 by KingSoft Ltd.  Mr. Leijun'    db 0dh,0ah    db ' ['  ShowCopies    db      '*'    db '] Activate...',0ah,0dh,'$'endTSR  equ     $mcbList equ     offset endTSR + 2 + 2vecList equ     mcbList + 7*10 + 2 + 10h + 1 + 400hdevLink equ     vecList + 4 + 5 * 26 + 4 + 10 * 30h + 4xmsList equ     devLink + 2 + MaxHandles * 2emsList equ     xmsList + 4 + 1024crtMode equ     emsList + 2 + 1Dh + 4 + 10htsrLen  equ     crtMode + 1;; DOS Environment Reserved by RI; --------------------------------------------------;   Flag                        'XX'       2 bytes;   Environment Segment                    1 word;   Free MCBs                         < =7*10 bytes;     MCB segment               1 word;     MCB                       5 bytes;   End flag                    'MM'       1 word;   COM LPT ports                        10h bytes;   LEDs status                            1 bytes;   Packed vectors list               <=400h 0="" 1="" 2="" 3="" 4="" 5="" 8="" 9="" 10="" 12="" 25="" 1993="" bytes="" ;="" flag="" 'cv'="" cvt="" first="" dpb="" pointer="" dpbs="" data="" <="5*26" dcb="" to="" nul="" all="" device="" driver="" datas="" 'xm'="" xms="" free="" handle="" counter="" ems="" list="" 'em'="" word="" number="" of="" pages="" '--'="" equipment="" crt="" 40:49h-66h="" 1dh="" 40:a8h="" dword="" bios="" user="" area="" 40:f0--ff="" 10h="" ***************************************************************************="" main:="" jmp="" main0="" print="" macro="" str="" lea="" dx,="" call="" displaystr="" endm="" instmsg="" db="" 'raminit="" version="" 2.12="" '="" 'copyright="" (c)="" 1989-1994="" by="" kingsoft="" ltd.="" ',0dh,0ah,'$'="" msg0="" 'already="" installed="" !',0dh,0ah,0ah="" 'for="" help,="" type="" "ri="" ?".="" msg_0="" 0ah,'residents="" a="" new="" raminit="" copy="" [y="" n]="" ?="" $'="" msg_2="" 'ok,="" ri="" no.'="" msg_ri="" '2'="" residents="" successful="" !',="" 0dh,0ah,'$'="" msg1="" 'activate="" with:="" keymsg="" 'right_shift$'="" 'left_shift$="" kmsg1="" 'left_ctrl$="" 'left_alt$="" 'right_ctrl$="" 'right_alt$="" kmsg2="" 'ctrl$="" 'alt$="" plusmsg="" +="" crlf="" helpmsg="" 'programmed="" mr.="" leijun="" dec="" 1992',="" 0dh,0ah,0ah="" 'usage:="" [options]',0dh,0ah,0ah="" h,="" display="" this="" screen',0dh,0ah="" cls="" removes="" tsr="" programs="" after="" current="" ri',0dh,0ah="" ret="" include="" environment',0dh,0ah="" copies="" and="" other="" programs',0dh,0ah="" sxyy..="" define="" hotkey="" x="AuxHotkey" yy..="shift" status',0dh,0ah="" (default="" is="" "x")="" ',0dh,0ah="" equ="" "1"="" means="" need="" auxhotkey',0dh,0ah="" status="" [cascas]',0dh,0ah="" c:="" left="" ctrl="" a:="" alt="" s:="" shift',0dh,0ah="" right="" shift',0dh,0ah,0ah="" 'example:="" s1c"="" right_ctrl+x',0dh,0ah="" s0cc"="" left_ctrl+right_ctrl',0dh,0ah="" cls"="" equals="" simply="" press="" hotkey',0dh,0ah="" ret"="" tsrs="" 0ah="" 'contact="" me="" for="" problems:="" (01)2561155="" 1997',0dh,0ah="" '$'="" errmsg="" 'error:="" invalid="" options="" !',0dh,0ah,0ah,'$'="" winerr="" 7,="" 'sorry,="" i="" cannot="" work="" in="" windows="" dos="" environment.',0dh,0ah,'$'="" setmsg="" 'defines="" tsrok="" false="" main0:="" cld="" iswindos="" or="" ax,="" ax="" jz="" @@1="" mov="" 4c00h="" int="" 21h="" @@1:="" hotkeyvalid="" cs:status,="" ems_test="" cmpdosver="" cmpsidekick="" getmachineid="" modifyhotkeyprompt="" 0c0d7h="" 2fh="" es,="" cmp="" ptr="" es:[101h],="" 'ie'="" 'lei'="" jnz="" @@0="" cs:self,="" @@0:="" cmdline="" printhotkeyprompt="" cs:tsrok,="" true="" @@2="" tsrreplyok="" @@2:="" @@_2="" printcopies="" @@_2:="" cs:[100h],="" 'el'="" byte="" cs:[102h],="" 'i'="" push="" cs="" pop="" es="" ds="" std="" si,="" offset="" eof="" cx,="" -="" here="" di,="" tsrlen="" add="" cx="" inc="" rep="" movsb="" bx,="" bx="" here:="" ax,cs="" es,ax="" di,offset="" endtsr="" cs:databegin,="" di="" cs:nextdataseg,="" -1="" 'xx'="" stosw="" al,="" 0a1h="" ah,="" al="" cs:old_8259,="" xor="" out="" 21h,al="" cli="" saveothers="" setselfint="" backupveclist="" cs:power,="" @@20="" backupcvtchain="" backupmemorymanager="" @@20:="" backupbiosdata="" sti="" cs:flag,="" no="" busy="" cs:stopflag,="" cs:tsrlength,="" setdosenvseg="" @@29="" cs:tsrlength="" cs:databegin="" sub="" si="" 120h="" @@29:="" 21h,="" ah="" 0a1h,="" dx="" 27h="" ----------------------------------------------------------------------------="" setdosenvseg:="" @@10:="" es:[16h]="" get="" father="" process="" psp="" segment="" @@11="" @@10="" @@11:="" es:[2ch]="" env="" cs:dosenv,="" saveothers:="" cs:[2ch]="" seg="" backupmcb="" mcb="" 40h="" com="" lpt="" port="" ds,="" 0h="" movsw="" 17h="" led="" lodsb="" stosb="" openleds="" --------------------------------------------------------------------------="" backupmcb:="" 'zm'="" 52h="" chain="" head="" es:[bx-2]="" ds:[0],="" 'z'="" end="" 'm'="" memory="" control="" block="" @@30="" ds:[3],="" ds:[1],="" savefreemcb="" ds:[3]="" 0a000h="" jnb="" 9fffh="" ms-dos="" umb="" @@30:="" 0c000h="" 386max="" ja="" @@90="" 0c020h="" @@90:="" error="" 'mm'="" set="" savefreemcb:="" si,si="" 09fffh="" @@3="" ds,ax="" @@4="" @@4:="" openleds:="" open leds="" 070h="" ds:[17h],="" 16h="" delay="" @@21:="" loop @@21="" setselfint:="" ax,3509h="" cs:oldint9_addr,bx="" cs:oldint9_addr[2],es="" dx,offset="" newint9="" ax,2509h="" ax,352fh="" cs:oldint2f_addr,bx="" cs:oldint2f_addr[2],es="" newint2f="" ax,252fh="" ax,351ch="" cs:oldint1c_addr,bx="" cs:oldint1c_addr[2],es="" newint1c="" ax,251ch="" cs:self="" es:copies="" @@_0:="" es:nextdataseg,="" @@_1="" es:nextdataseg="" @@_0="" @@_1:="" -----------------------------------------------------------------------="" savecounter:="" es:[di],="" es:[di+2],="" es:[di+3],="" bl="" displaystr:="" cmdline:="" 80h="" 's'="" sethotkey="" @@_3:="" 'a'="" jb="" ds:[si-1],20h="" downcase="" @@3:="" @@_3="" @@5="" ds:[si-3],="" 'lc'="" @err="" 0c0d7h+1="" @@5:="" 'h'="" help="" @help="" '?'="" 't'="" @@6="" 'er'="" @@7:="" 0c0d7h+2="" @@6:="" 'w'="" @@8="" 'en'="" @@8:="" 'l'="" @@9="" 'la'="" 0c0d7h+3="" @@9:="" @err:="" @help:="" ;---------------------------------------------------------------------------="" tsrreplyok:="" @@_10:="" @@_10="" es:[3]="" es:[0],="" 'oc'="" 'y'="" msg_1="" 4c01h="" printcopies:="" added="" -by-="" lei="" aug="" 24,="" total="" search="" file="" name="" es:[bx],="" 20h="" 0ffh="" 00h="" ':'="" "ri:2"="" es:[bx+1],="" 8+7="" es:[bx+2],="" cs:msg_ri,="" backup="" interrupt="" vector="" backupveclist:="" vectors="" ds,si="" cx,00ffh="" lodsw="" xchg="" es:[di-2]="" es:[di-4]="" savecounter="" ;-----------------------------------------------------------------------------="" backupcvtchain:="" 'vc'="" es:bx="" --="" table="" as="" described="" below="" --------------------------------------------------------------------="" chains="" lds="" es:[bx]="" cs:cvtofs="" ds:[si+1]="" ds:[si+bx+12h]="" ds:[si+bx+14h]="" ds:[si+bx+18h]="" mul="" cl="" blocks="" les="" es:[bx+4]="" ---------------------------------------------------------------------="" 22h="" cl,="" ds:[si]="" backupbiosdata:="" 0a8h="" 49h="" 0f0h="" ---------------------------------------------------------------------------="" backupmemorymanager:="" savexmsstatus="" saveemsstatus="" ;---------------------------------------------------------------------="" saveemsstatus:="" test="" emsbit="" 'me'="" 4dh="" 67h="" es:[di-2],="" shl="" -------------------------------------------------------------------="" savexmsstatus:="" xms_test="" xmsbit="" 'mx'="" xms_alloc="" alloc="" failure="" maxhandles="" *="" xms_lock="" bl,="" 0a2h="" xms_unlock="" cs:handle_begin,="" xms_bstat="" xms_free="" cs:handle_begin="" @@7="" ------------------------------------------------------------------="" xms_test:="" 4300h="" 4310h="" cs:xms_control,="" cs:xms_control[2],="" xms_stat:="" cs:xms_control="" hma_exist,="" dl="" hma_exist="" xms_alloc:="" xms_lock:="" 0ch="" xms_unlock:="" 0dh="" xms_bstat:="" 0eh="" xms_free:="" ems_test:="" emmname="" 3d00h="" jc="" 3eh="" 'emmxxxx0',0="" -----------------------------------------------------------------------------="" sethotkey:="" 'c'="" leftctrl="" rightctrl="" leftalt="" rightalt="" leftshift="" rightshift="" cs:hotkey,="" cs:auxhotkey,="" 2dh="" 'x'="" scan="" key="" '1'="" es:hotkey,="" cs:auxhotkey="" es:auxhotkey,="" getrunfilename="" 3d02h="" 100h="" 4200h="" auxhotkey="" getrunfilename:="" return:="" ds:dx="" run="" asciiz="" string="" 1000h="" repnz="" scasb="" loopnz="" getmachineid:="" kbd102,true="" ax,40h="" es:[96h],="" 00010000b="" kbd102,false="" ax,ax="" al,es:[0eh]="" cs:machineid,="" modifyhotkeyprompt:="" cs:kbd102,="" 12*4="" 0fch="" jna="" cs:clsstrcolor,="" 70h="" mono="" cs:clsstr,="" printhotkeyprompt:="" cs:hotkey="" shr="" 33ch="" @@40:="" @@_42="" jnc="" @@41="" colordisplaystr="" @@42="" @@41:="" @@40="" @@42:="" @@_42:="" @@43="" @@_43="" @@_43:="" auxhotkeyname="" @@43:="" colordisplaystr:="" 0fh="" bh,="" bh="" 09h="" short="" cmpsidekick:="" es:[20h]="" es:[bx-4],="" 4b53h="" es:[bx-2],="" 4942h="" es:[94h]="" skbit="" cmpdosver:="" 30h="" cs:cvtofs,="" dosvererr="" 4cffh="" too="" lower="" !',0dh,0ah,'$'="" hotkeyvalid:="" hotkeyerr="" 4cfeh="" please="" setup="" again.="" eof:="" ends="" start="" -------------="" the="" !="" ---------------------------------------------------="" ="" pre=""></=400h></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前从来没黑过我雷总，但是，也没有说多关注他，只是比较看好小米手机的发展。今天，我正式宣布，成为雷粉，武大计算机系、两年修满四年学分、汇编语言满分通过、写过大大小小各种软件、参与编著《深入DOS编程》一书、投资了多个有潜力的企业、带着小米在安卓市场杀出一条血路，这tm就是神啊~&lt;br&gt;（PS：下面这个汇编代码，2185行）
    
    </summary>
    
      <category term="随笔" scheme="http://youthliuxi.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="程序猿" scheme="http://youthliuxi.github.io/categories/%E9%9A%8F%E7%AC%94/%E7%A8%8B%E5%BA%8F%E7%8C%BF/"/>
    
    
      <category term="雷军" scheme="http://youthliuxi.github.io/tags/%E9%9B%B7%E5%86%9B/"/>
    
      <category term="汇编语言" scheme="http://youthliuxi.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>记在丁酉年末、戊戌年初</title>
    <link href="http://youthliuxi.github.io/2018/02/16/%E8%AE%B0%E5%9C%A8%E4%B8%81%E9%85%89%E5%B9%B4%E6%9C%AB%E3%80%81%E6%88%8A%E6%88%8C%E5%B9%B4%E5%88%9D/"/>
    <id>http://youthliuxi.github.io/2018/02/16/记在丁酉年末、戊戌年初/</id>
    <published>2018-02-15T17:05:09.000Z</published>
    <updated>2018-07-31T07:35:08.792Z</updated>
    
    <content type="html"><![CDATA[<p>又是一年除夕夜，又是一年不眠时。<br>今天，回顾了记于丙申年末的博文，沉默……但还是继续今年的年终总结。<a id="more"></a></p><h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><p>1月按阴历还是丙申年，那时候，大概是在等上一次考研的成绩吧~不过，潜意识里觉得自己希望渺茫，或者，根本不想面对那次的结果，意料之中，情理之中的结果，一败涂地。</p><h2 id="2月"><a href="#2月" class="headerlink" title="2月"></a>2月</h2><p>2月10日入坑收账，彼时，对手账钟爱有加，觉得生活就应该有计划，五色分工大法、各种计划与总结。总的来说，计划多，做得少，其实那个时候就有苗头了，只是我还是不自知。<br>彼时其实就没有认真对待过二战，总觉得时间还够。<br>人，是斗不过潜意识的。</p><h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><p>回望3月，回到学校，一切照旧，有些学校记录的事儿要忙，闲时会刷刷微博，时长有计划未完成，做顺延处理。<br>综合测评+毕设开题+各种信息统计，期间有做平板撑，没坚持；有做腹肌撕裂者，没坚持；除了一个每晚5公里的跑步计划有在坚持以外，其他，都没有坚持下来。</p><h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><p>各种收材料、打印整理毕设资料、开会，4月23日左右还爬了一次泰山。<br>这时候就已经有偶尔的起床时间在11点左右。<br>唯一值得庆幸的是4月30日的体重是71.2公斤，成功完成5周减肥20斤的目标。</p><h2 id="5月"><a href="#5月" class="headerlink" title="5月"></a>5月</h2><p>五一放假在家，基本搞定毕设初稿，剩下的时间基本都在格式修改以及内容微调。<br>那时的我，已经出现，在出租屋闲着一天没做事儿的情况存在了。</p><h2 id="6月"><a href="#6月" class="headerlink" title="6月"></a>6月</h2><p>毕业季，定毕业聚会饭店、毕业答辩资料的最后总结、各种毕业信息填写、拍毕业照，就连我打算写的“毕业随笔”，都拖延了两天，才断断续续的完成。<br>6月24日，正式毕业离校。自此，我便不再拥有学生身份。</p><h2 id="7月"><a href="#7月" class="headerlink" title="7月"></a>7月</h2><p>在家学习的第一个月，1000题的刷题，英语的超精读（逐句翻译）、以及拖延症的前期。<br>手账出现糊弄的现象，而且，越来越明显。</p><h2 id="8月"><a href="#8月" class="headerlink" title="8月"></a>8月</h2><p>重度拖延症，重积分原定计划4天，实际完成天数在9天以上，当然，计划时未完全考虑学习难度是一方面，拖延才是重点。<br>自8月16日后，手账断更明显，后期基本停更。<br>8月23日，已经诞生了自知自己如此这般便不会成功的想法，发现了自己执行效率十分底下，却十足的不自知，依然故我。</p><h2 id="9月-12月"><a href="#9月-12月" class="headerlink" title="9月~12月"></a>9月~12月</h2><p>手账基本处于停更状态或完全停更。<br>复习状态依旧，走神严重，间歇性踌躇满珠，持续性混吃等死，不算夸张。<br>自控力差，还常常抱怨老爸的干扰，实际上，一切都是我自己的问题，我，真的只是看起来，很努力，而已。<br>的确，倘若9~12月记了手账，这便是我的心魔。<br>不过，现在依然是。</p><h2 id="2018年1月"><a href="#2018年1月" class="headerlink" title="2018年1月"></a>2018年1月</h2><p>等待成绩，无心学习。<br>时而觉得自己肯定有戏，时而又觉得自己没什么希望。<br>在绝望中又抱有一丝的侥幸，觉得，假装的努力骗得了别人，也许，也能够骗得了自己，甚至，或许还可以骗一骗阅卷人。</p><h2 id="2018年2月"><a href="#2018年2月" class="headerlink" title="2018年2月"></a>2018年2月</h2><p>结果已出，依然的失败，付出不够就是付出不够，前路茫茫，不知该去向何方。<br>联系了b区某大学，已收到回执短信，静候国家线与调剂系统的到来。</p><h2 id="文末"><a href="#文末" class="headerlink" title="文末"></a>文末</h2><p>我，大概还有30天时间，也许，还能够证明自己，不是一个废物。<br>我是一个能够为自己负责的人，是一个能够控制住自己的人。<br>前不久曾在朋友圈中自述道：<br>我这个人，总是站在圈里时，脑海中全是圈外的世界。<br>大一时，本应该好好学习，却热衷于娱乐<br>大二时，本应该对网站、学生会、学习等均衡上心，却谈起了恋爱<br>大三时，本应该对专业课抱有极大的热情，却钟情于网站，意欲放弃本专业课程<br>大四时，本应该钟情于考研，却上心不足，分心有余。<br>毕业半年，自诩二战，却消极对待，对考研后的生活总是计划的头头是道，可笑。<br>查到成绩，本应该立足复试，却意欲三战。<br>也不是不行，但是，即便是三战，你小子能不能先把复试过了，证明自己是有料的，不是个一无是处的废物<br>圈里的事情从来没有搞明白过，却总是招呼着圈外的世界有多精彩。<br>谁是随随便便成功的，大家不都是把自己圈里的事情做好的么？<br>该做什么就做什么，才是正道。<br>把圈外的事情描述的头头是道，自诩是目标，只有一个目的，那就是逃避圈里的责任。<br>不管最终我是二战考上还是三战考上，这个坎是我的必经之路，不然，走哪条路，我都是，废物。<br>十足的废物。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是一年除夕夜，又是一年不眠时。&lt;br&gt;今天，回顾了记于丙申年末的博文，沉默……但还是继续今年的年终总结。
    
    </summary>
    
      <category term="随笔" scheme="http://youthliuxi.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="年终总结" scheme="http://youthliuxi.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>递归问题</title>
    <link href="http://youthliuxi.github.io/2018/01/31/%E9%80%92%E5%BD%92%E9%97%AE%E9%A2%98/"/>
    <id>http://youthliuxi.github.io/2018/01/31/递归问题/</id>
    <published>2018-01-31T15:51:08.000Z</published>
    <updated>2018-07-31T07:35:08.793Z</updated>
    
    <content type="html"><![CDATA[<h2 id="递归的分析"><a href="#递归的分析" class="headerlink" title="递归的分析"></a>递归的分析</h2><h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><p>汉罗塔（A,B,C三个点位，要求把A位完全移动到C位，只允许小的在大的上面）<br><img src="http://youthliuxi.cn/wp-content/uploads/2018/01/图片1.png" alt="汉罗塔"><br><a id="more"></a></p><pre>def move(n, a, b, c):    if n ==1:        print a, '-->', c,  a,'_',b,'_',c        return    move(n-1, a, c, b)    print a, '-->', c, a,'_',b,'_',c    move(n-1, b, a, c)move(4, 'A', 'B', 'C')</pre><hr><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><p>&emsp;&emsp;递归，算法编程中常见的一种方法，函数调用自身，一种十分优雅的解决问题的方法。主要构成分为基线条件和递归条件两种。<br>&emsp;&emsp;基线条件(base case)：规定函数自何时起不能再调用自身，防止出现死循环。<br>&emsp;&emsp;递归条件(recursive case)：函数调用自身<br>&emsp;&emsp;在实例函数中，if条件引导的就是基线条件，当n=1时，函数终止调用自身，并跳过下面的步骤，直接返回调用该函数的那一层。<br>&emsp;&emsp;汉罗塔的递归思想的源头在于，他的拆分逻辑，要想把上面N个从A移到C，要经过三步：<br>&emsp;&emsp;1、把上面N-1个从A移到B<br>&emsp;&emsp;2、把第N个从A移到C<br>&emsp;&emsp;3、把B上的那N-1个从B移到C<br>&emsp;&emsp;这个例子就完美的使用了这儿方法，函数所有的移动都是以a位移向c位，引用时只需要把移动前的位置值传给a变量，把移动后的位置值传给c变量，就可以做到完美的递归引用。再从其中嵌入基线条件，确定当只存在一个需要移位时，直接移动，并且，直接跳过下面的步骤返回调用函数的那一层。<br>（PS：其实写这个东西就是为了从例子开始，做反推联系，读懂代码并不意味着能够构造出相同思路的代码）</p><hr><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>例子的整个流程<br>从上到下分别为1,2,3,4</p><pre>4ABC{                //主要目的，把1234从A移到C    3ACB{                //主要目的，把123从A移到B        2ABC{                //主要目的，把12从A移到C            1ACB{                //主要目的，把1从A移到B                P-AB                    //把1，从A移到B            }                P-AC                //把2，从A移到C            1BAC{                //主要目的，把1从B移到C                P-BC                    //把1，从B移到C            }        }                P-AB            //把3，从A移到B        2CAB{                //主要目的，把12从C移到B            1CBA{                //主要目的，把1从C移到A                P-CA                    //把1，从C移到A            }                P-CB                //把2，从C移到B            1ACB{                //主要目的，把1从A移到B                P-AB                    //把1，从A移到B            }        }    }P-AC        //把4，从A移到C    3BAC{                //主要目的，把123从B移到C        2BCA{                //主要目的，把12从B移到A            1BAC{                //主要目的，把1从B移到C                P-BC            }                P-BA                //把2，从B移到A            1CBA{                //主要目的，把1从C移到A                P-CA            }        }                P-BC            //把3从B移到C        2ABC{                //主要目的，把12从A移到C            1ACB{                //主要目的，把1从A移到B                P-AB            }                P-AC                //把2，从A移到C            1BAC{                //主要目的，把1从B移到C                P-BC            }        }    }}</pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;递归的分析&quot;&gt;&lt;a href=&quot;#递归的分析&quot; class=&quot;headerlink&quot; title=&quot;递归的分析&quot;&gt;&lt;/a&gt;递归的分析&lt;/h2&gt;&lt;h3 id=&quot;实例：&quot;&gt;&lt;a href=&quot;#实例：&quot; class=&quot;headerlink&quot; title=&quot;实例：&quot;&gt;&lt;/a&gt;实例：&lt;/h3&gt;&lt;p&gt;汉罗塔（A,B,C三个点位，要求把A位完全移动到C位，只允许小的在大的上面）&lt;br&gt;&lt;img src=&quot;http://youthliuxi.cn/wp-content/uploads/2018/01/图片1.png&quot; alt=&quot;汉罗塔&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://youthliuxi.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="递归" scheme="http://youthliuxi.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="汉罗塔" scheme="http://youthliuxi.github.io/tags/%E6%B1%89%E7%BD%97%E5%A1%94/"/>
    
  </entry>
  
</feed>
